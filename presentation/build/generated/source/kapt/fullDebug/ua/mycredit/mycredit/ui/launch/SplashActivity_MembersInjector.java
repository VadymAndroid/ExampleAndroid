// Generated by Dagger (https://google.github.io/dagger).
package ua.mycredit.mycredit.ui.launch;

import android.support.v4.app.Fragment;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import javax.inject.Provider;
import ru.terrakok.cicerone.NavigatorHolder;
import ru.terrakok.cicerone.Router;
import ua.mycredit.core.LocalStorage;
import ua.mycredit.core.Logouter;
import ua.mycredit.core.internal.Logger;
import ua.mycredit.mycredit.AppEvents;
import ua.mycredit.mycredit.ui.bases.BaseActivity_MembersInjector;

public final class SplashActivity_MembersInjector implements MembersInjector<SplashActivity> {
  private final Provider<DispatchingAndroidInjector<Fragment>> supportFragmentInjectorProvider;

  private final Provider<DispatchingAndroidInjector<android.app.Fragment>>
      frameworkFragmentInjectorProvider;

  private final Provider<NavigatorHolder> navigatorHolderProvider;

  private final Provider<LocalStorage> storageProvider;

  private final Provider<Router> routerProvider;

  private final Provider<AppEvents> eventsProvider;

  private final Provider<Logger> loggerProvider;

  private final Provider<Logouter> logouterProvider;

  public SplashActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> supportFragmentInjectorProvider,
      Provider<DispatchingAndroidInjector<android.app.Fragment>> frameworkFragmentInjectorProvider,
      Provider<NavigatorHolder> navigatorHolderProvider,
      Provider<LocalStorage> storageProvider,
      Provider<Router> routerProvider,
      Provider<AppEvents> eventsProvider,
      Provider<Logger> loggerProvider,
      Provider<Logouter> logouterProvider) {
    this.supportFragmentInjectorProvider = supportFragmentInjectorProvider;
    this.frameworkFragmentInjectorProvider = frameworkFragmentInjectorProvider;
    this.navigatorHolderProvider = navigatorHolderProvider;
    this.storageProvider = storageProvider;
    this.routerProvider = routerProvider;
    this.eventsProvider = eventsProvider;
    this.loggerProvider = loggerProvider;
    this.logouterProvider = logouterProvider;
  }

  public static MembersInjector<SplashActivity> create(
      Provider<DispatchingAndroidInjector<Fragment>> supportFragmentInjectorProvider,
      Provider<DispatchingAndroidInjector<android.app.Fragment>> frameworkFragmentInjectorProvider,
      Provider<NavigatorHolder> navigatorHolderProvider,
      Provider<LocalStorage> storageProvider,
      Provider<Router> routerProvider,
      Provider<AppEvents> eventsProvider,
      Provider<Logger> loggerProvider,
      Provider<Logouter> logouterProvider) {
    return new SplashActivity_MembersInjector(
        supportFragmentInjectorProvider,
        frameworkFragmentInjectorProvider,
        navigatorHolderProvider,
        storageProvider,
        routerProvider,
        eventsProvider,
        loggerProvider,
        logouterProvider);
  }

  @Override
  public void injectMembers(SplashActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
        instance, supportFragmentInjectorProvider.get());
    DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
        instance, frameworkFragmentInjectorProvider.get());
    BaseActivity_MembersInjector.injectNavigatorHolder(instance, navigatorHolderProvider.get());
    BaseActivity_MembersInjector.injectStorage(instance, storageProvider.get());
    BaseActivity_MembersInjector.injectRouter(instance, routerProvider.get());
    BaseActivity_MembersInjector.injectEvents(instance, eventsProvider.get());
    BaseActivity_MembersInjector.injectLogger(instance, loggerProvider.get());
    injectLogouter(instance, logouterProvider.get());
  }

  public static void injectLogouter(SplashActivity instance, Logouter logouter) {
    instance.logouter = logouter;
  }
}
