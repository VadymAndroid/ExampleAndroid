// Generated by Dagger (https://google.github.io/dagger).
package ua.mycredit.mycredit.ui.bases;

import com.google.firebase.analytics.FirebaseAnalytics;
import dagger.MembersInjector;
import javax.inject.Provider;
import ru.terrakok.cicerone.Router;
import ua.mycredit.core.LocalStorage;
import ua.mycredit.core.Logouter;
import ua.mycredit.core.internal.Logger;
import ua.mycredit.mycredit.AppEvents;
import ua.mycredit.mycredit.ui.MessagesMapper;

public final class BaseViewModel_MembersInjector implements MembersInjector<BaseViewModel> {
  private final Provider<Router> routerProvider;

  private final Provider<AppEvents> eventsProvider;

  private final Provider<Logouter> logouterProvider;

  private final Provider<FirebaseAnalytics> analyticsProvider;

  private final Provider<MessagesMapper> messagesMapperProvider;

  private final Provider<LocalStorage> storageProvider;

  private final Provider<Logger> loggerProvider;

  public BaseViewModel_MembersInjector(
      Provider<Router> routerProvider,
      Provider<AppEvents> eventsProvider,
      Provider<Logouter> logouterProvider,
      Provider<FirebaseAnalytics> analyticsProvider,
      Provider<MessagesMapper> messagesMapperProvider,
      Provider<LocalStorage> storageProvider,
      Provider<Logger> loggerProvider) {
    this.routerProvider = routerProvider;
    this.eventsProvider = eventsProvider;
    this.logouterProvider = logouterProvider;
    this.analyticsProvider = analyticsProvider;
    this.messagesMapperProvider = messagesMapperProvider;
    this.storageProvider = storageProvider;
    this.loggerProvider = loggerProvider;
  }

  public static MembersInjector<BaseViewModel> create(
      Provider<Router> routerProvider,
      Provider<AppEvents> eventsProvider,
      Provider<Logouter> logouterProvider,
      Provider<FirebaseAnalytics> analyticsProvider,
      Provider<MessagesMapper> messagesMapperProvider,
      Provider<LocalStorage> storageProvider,
      Provider<Logger> loggerProvider) {
    return new BaseViewModel_MembersInjector(
        routerProvider,
        eventsProvider,
        logouterProvider,
        analyticsProvider,
        messagesMapperProvider,
        storageProvider,
        loggerProvider);
  }

  @Override
  public void injectMembers(BaseViewModel instance) {
    injectRouter(instance, routerProvider.get());
    injectEvents(instance, eventsProvider.get());
    injectLogouter(instance, logouterProvider.get());
    injectAnalytics(instance, analyticsProvider.get());
    injectMessagesMapper(instance, messagesMapperProvider.get());
    injectStorage(instance, storageProvider.get());
    injectLogger(instance, loggerProvider.get());
    injectBindToAppEvents(instance);
  }

  public static void injectRouter(BaseViewModel instance, Router router) {
    instance.router = router;
  }

  public static void injectEvents(BaseViewModel instance, AppEvents events) {
    instance.events = events;
  }

  public static void injectLogouter(BaseViewModel instance, Logouter logouter) {
    instance.logouter = logouter;
  }

  public static void injectAnalytics(BaseViewModel instance, FirebaseAnalytics analytics) {
    instance.analytics = analytics;
  }

  public static void injectMessagesMapper(BaseViewModel instance, MessagesMapper messagesMapper) {
    instance.messagesMapper = messagesMapper;
  }

  public static void injectStorage(BaseViewModel instance, LocalStorage storage) {
    instance.storage = storage;
  }

  public static void injectLogger(BaseViewModel instance, Logger logger) {
    instance.logger = logger;
  }

  public static void injectBindToAppEvents(BaseViewModel instance) {
    instance.bindToAppEvents();
  }
}
