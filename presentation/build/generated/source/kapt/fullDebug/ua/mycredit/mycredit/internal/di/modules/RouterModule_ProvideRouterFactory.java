// Generated by Dagger (https://google.github.io/dagger).
package ua.mycredit.mycredit.internal.di.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ru.terrakok.cicerone.Router;

public final class RouterModule_ProvideRouterFactory implements Factory<Router> {
  private final RouterModule module;

  public RouterModule_ProvideRouterFactory(RouterModule module) {
    this.module = module;
  }

  @Override
  public Router get() {
    return provideInstance(module);
  }

  public static Router provideInstance(RouterModule module) {
    return proxyProvideRouter(module);
  }

  public static RouterModule_ProvideRouterFactory create(RouterModule module) {
    return new RouterModule_ProvideRouterFactory(module);
  }

  public static Router proxyProvideRouter(RouterModule instance) {
    return Preconditions.checkNotNull(
        instance.provideRouter(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
