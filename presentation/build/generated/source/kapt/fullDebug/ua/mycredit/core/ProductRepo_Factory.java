// Generated by Dagger (https://google.github.io/dagger).
package ua.mycredit.core;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ProductRepo_Factory implements Factory<ProductRepo> {
  private final Provider<NetworkFacade> arg0Provider;

  private final Provider<LocalStorage> arg1Provider;

  public ProductRepo_Factory(
      Provider<NetworkFacade> arg0Provider, Provider<LocalStorage> arg1Provider) {
    this.arg0Provider = arg0Provider;
    this.arg1Provider = arg1Provider;
  }

  @Override
  public ProductRepo get() {
    return provideInstance(arg0Provider, arg1Provider);
  }

  public static ProductRepo provideInstance(
      Provider<NetworkFacade> arg0Provider, Provider<LocalStorage> arg1Provider) {
    return new ProductRepo(arg0Provider.get(), arg1Provider.get());
  }

  public static ProductRepo_Factory create(
      Provider<NetworkFacade> arg0Provider, Provider<LocalStorage> arg1Provider) {
    return new ProductRepo_Factory(arg0Provider, arg1Provider);
  }

  public static ProductRepo newProductRepo(NetworkFacade arg0, LocalStorage arg1) {
    return new ProductRepo(arg0, arg1);
  }
}
