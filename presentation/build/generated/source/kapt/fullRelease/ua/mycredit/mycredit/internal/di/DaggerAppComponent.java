// Generated by Dagger (https://google.github.io/dagger).
package ua.mycredit.mycredit.internal.di;

import android.app.Activity;
import android.arch.lifecycle.ViewModel;
import android.content.Context;
import android.support.v4.app.Fragment;
import com.google.common.collect.ImmutableMap;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import com.google.firebase.analytics.FirebaseAnalytics;
import dagger.android.AndroidInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.DispatchingAndroidInjector_Factory;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.android.support.DaggerAppCompatDialogFragment_MembersInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.DoubleCheck;
import dagger.internal.InstanceFactory;
import dagger.internal.MapProviderFactory;
import dagger.internal.Preconditions;
import io.reactivex.Scheduler;
import java.util.Map;
import javax.inject.Provider;
import ru.terrakok.cicerone.NavigatorHolder;
import ru.terrakok.cicerone.Router;
import ua.mycredit.core.BaseUseCase;
import ua.mycredit.core.ProductRepo;
import ua.mycredit.core.ProductRepo_Factory;
import ua.mycredit.core.ProfileRepo;
import ua.mycredit.core.ProfileRepo_Factory;
import ua.mycredit.core.interactors.AcceptAgreementUseCase_Factory;
import ua.mycredit.core.interactors.ApplyForCreditUseCase_Factory;
import ua.mycredit.core.interactors.CPAUseCase_Factory;
import ua.mycredit.core.interactors.CheckTinUseCase_Factory;
import ua.mycredit.core.interactors.CountDownUseCase_Factory;
import ua.mycredit.core.interactors.DeleteCardUseCase_Factory;
import ua.mycredit.core.interactors.EditPasswordUseCase_Factory;
import ua.mycredit.core.interactors.GetAgreementUseCase_Factory;
import ua.mycredit.core.interactors.GetContractAdditionsUseCase_Factory;
import ua.mycredit.core.interactors.GetPaymentUrlUseCase_Factory;
import ua.mycredit.core.interactors.GetProductByPromoCodeUseCase_Factory;
import ua.mycredit.core.interactors.GetStatusUseCase_Factory;
import ua.mycredit.core.interactors.LoadCardsUseCase_Factory;
import ua.mycredit.core.interactors.LoadHistoryUseCase_Factory;
import ua.mycredit.core.interactors.LoadProfileUseCase_Factory;
import ua.mycredit.core.interactors.MarkAsMainUseCase_Factory;
import ua.mycredit.core.interactors.PhoneContactsUseCase_Factory;
import ua.mycredit.core.interactors.PhoneOptionsUseCase_Factory;
import ua.mycredit.core.interactors.ProlongUseCase_Factory;
import ua.mycredit.core.interactors.RequestResetPasswordSmsUseCase_Factory;
import ua.mycredit.core.interactors.RequestSmsIfPhoneValidUseCase_Factory;
import ua.mycredit.core.interactors.ResetPasswordUseCase_Factory;
import ua.mycredit.core.interactors.RestructureCreditUseCase_Factory;
import ua.mycredit.core.interactors.SignInUseCase_Factory;
import ua.mycredit.core.interactors.UpdateProfileUseCase_Factory;
import ua.mycredit.core.interactors.VerifyCardUseCase_Factory;
import ua.mycredit.core.interactors.VerifySmsCodeUseCase_Factory;
import ua.mycredit.data.di.NetworkModule;
import ua.mycredit.data.di.NetworkModule_ProvideApiCpaFactory;
import ua.mycredit.data.di.NetworkModule_ProvideApiFactory;
import ua.mycredit.data.di.NetworkModule_ProvideInterceptorFactory;
import ua.mycredit.data.di.NetworkModule_ProvideLoggingInterceptorFactory;
import ua.mycredit.data.di.NetworkModule_ProvideOkHttpClientFactory;
import ua.mycredit.data.di.NetworkModule_ProvideRetrofitCpaFactory;
import ua.mycredit.data.di.NetworkModule_ProvideRetrofitFactory;
import ua.mycredit.data.impls.LogouterImpl;
import ua.mycredit.data.impls.LogouterImpl_Factory;
import ua.mycredit.data.impls.NetworkFacadeImpl;
import ua.mycredit.data.impls.NetworkFacadeImpl_Factory;
import ua.mycredit.mycredit.AndroidApplication;
import ua.mycredit.mycredit.AndroidApplication_MembersInjector;
import ua.mycredit.mycredit.AppEvents;
import ua.mycredit.mycredit.AppEvents_Factory;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_AddCardActivity;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_AddRepayLoanActivity;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_AgreementActivity;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_CalculatorActivityInjector;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_CardWebVerificationActivity;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_CardsActivity;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_ContactsActivity;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_DetailsActivityInjector;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_FaqActivityInjector;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_OnboardingActivityInjector;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_ProfileActivityInjector;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_ProlongationPreferencesDialogActivity;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_ResetPasswordActivity;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_SignInActivityInjector;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_SignUpActivityInjector;
import ua.mycredit.mycredit.internal.di.modules.ActivitiesModule_SplashActivityInjector;
import ua.mycredit.mycredit.internal.di.modules.FirebaseModule;
import ua.mycredit.mycredit.internal.di.modules.FirebaseModule_GetFirebaseAnalyticsFactory;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_AgreementFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_BankFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_BusinessmanFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CalculatorDialogFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CalculatorFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CardBackFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CardFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CardFrontFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CardSmsFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CardWebVerificationFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CardsFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CardsPickerFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_ContactsFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_CreditFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_DecreeFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_EditPasswordFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_ExtraPersonalInfoFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_FinanceFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_HistoryFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_HoneInputDialogFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_HousewifeFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_InputPromoCodeDialogFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_InvalidFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_NewCardBackFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_NewCardFrontFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_PassportFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_PasswordFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_PensionerFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_PersonalDataFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_PersonalInformationFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_PreferRepayAmountInputDialogFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_ProgressDialogFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_ProlongationPreferencesFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_QuestionsFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_ResetPasswordFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_SignInFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_SignUpAddressFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_SignUpPhoneFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_SignUpSMSFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_StudentFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_TemporarilyUnemployedFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_TerminalsFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_TextInputDialogFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_UneditablePersonalDataDialog;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_UnemployedFragment;
import ua.mycredit.mycredit.internal.di.modules.FragmentsModule_WorkFragmentInjector;
import ua.mycredit.mycredit.internal.di.modules.RouterModule;
import ua.mycredit.mycredit.internal.di.modules.RouterModule_ProvideNavigatorHolderFactory;
import ua.mycredit.mycredit.internal.di.modules.RouterModule_ProvideRouterFactory;
import ua.mycredit.mycredit.internal.di.modules.SchedulersModule;
import ua.mycredit.mycredit.internal.di.modules.SchedulersModule_AppExecutionSchedulersFactory;
import ua.mycredit.mycredit.internal.impls.AppMetaDataImpl;
import ua.mycredit.mycredit.internal.impls.AppMetaDataImpl_Factory;
import ua.mycredit.mycredit.internal.impls.LocalStorageImpl;
import ua.mycredit.mycredit.internal.impls.LocalStorageImpl_Factory;
import ua.mycredit.mycredit.internal.impls.LoggerImpl;
import ua.mycredit.mycredit.internal.impls.LoggerImpl_Factory;
import ua.mycredit.mycredit.internal.impls.MessagesMapperImpl;
import ua.mycredit.mycredit.internal.impls.MessagesMapperImpl_Factory;
import ua.mycredit.mycredit.internal.impls.ViewModelFactoryImpl;
import ua.mycredit.mycredit.internal.impls.ViewModelFactoryImpl_Factory;
import ua.mycredit.mycredit.ui.ProgressDialogFragment;
import ua.mycredit.mycredit.ui.authentication.ResetPasswordActivity;
import ua.mycredit.mycredit.ui.authentication.ResetPasswordByPhoneFragment;
import ua.mycredit.mycredit.ui.authentication.ResetPasswordByPhoneViewModel;
import ua.mycredit.mycredit.ui.authentication.ResetPasswordByPhoneViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.SignInActivity;
import ua.mycredit.mycredit.ui.authentication.SignInFragment;
import ua.mycredit.mycredit.ui.authentication.SignInViewModel;
import ua.mycredit.mycredit.ui.authentication.SignInViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.SignUpActivity;
import ua.mycredit.mycredit.ui.authentication.registration.SignUpActivity_MembersInjector;
import ua.mycredit.mycredit.ui.authentication.registration.SignUpProgressViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.SignUpProgressViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.card.CardBackFragment;
import ua.mycredit.mycredit.ui.authentication.registration.card.CardBackViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.card.CardBackViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.card.CardFrontFragment;
import ua.mycredit.mycredit.ui.authentication.registration.finance.FinanceFragment;
import ua.mycredit.mycredit.ui.authentication.registration.finance.FinanceViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.finance.FinanceViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.BusinessmanFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.BusinessmanViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.BusinessmanViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.DecreeFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.DecreeViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.DecreeViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.EmployedFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.EmployedViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.EmployedViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.HousewifeFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.HousewifeViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.HousewifeViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.InvalidFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.InvalidViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.InvalidViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.PensionerFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.PensionerViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.PensionerViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.StudentFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.StudentViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.StudentViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.TemporarilyUnemployedFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.TemporarilyUnemployedViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.TemporarilyUnemployedViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.UnemployedFragment;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.UnemployedViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.ocupation.UnemployedViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.passport.address.SignUpAddressFragment;
import ua.mycredit.mycredit.ui.authentication.registration.passport.address.SignUpAddressViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.passport.address.SignUpAddressViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.passport.passport.PassportFragment;
import ua.mycredit.mycredit.ui.authentication.registration.passport.passport.PassportViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.passport.passport.PassportViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.ExtraPersonalInfoFragment;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.ExtraPersonalInfoViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.ExtraPersonalInfoViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.PersonalDataFragment;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.PersonalDataViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.PersonalDataViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.PersonalInfoFragment;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.PersonalInfoViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.passport.personal.PersonalInfoViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.phone.SignUpPhoneFragment;
import ua.mycredit.mycredit.ui.authentication.registration.phone.SignUpPhoneViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.phone.SignUpPhoneViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.signup.PasswordFragment;
import ua.mycredit.mycredit.ui.authentication.registration.signup.PasswordViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.signup.PasswordViewModel_Factory;
import ua.mycredit.mycredit.ui.authentication.registration.sms.SignUpSMSFragment;
import ua.mycredit.mycredit.ui.authentication.registration.sms.SignUpSMSViewModel;
import ua.mycredit.mycredit.ui.authentication.registration.sms.SignUpSMSViewModel_Factory;
import ua.mycredit.mycredit.ui.bases.BaseActivity_MembersInjector;
import ua.mycredit.mycredit.ui.bases.BaseDialogFragment2_MembersInjector;
import ua.mycredit.mycredit.ui.bases.BaseFragment_MembersInjector;
import ua.mycredit.mycredit.ui.bases.BaseViewModel_MembersInjector;
import ua.mycredit.mycredit.ui.bases.SelfBindingActivity_MembersInjector;
import ua.mycredit.mycredit.ui.bases.input.BaseInputDialogFragment_MembersInjector;
import ua.mycredit.mycredit.ui.bases.input.PhoneInputDialogFragment;
import ua.mycredit.mycredit.ui.bases.input.TextInputDialogFragment;
import ua.mycredit.mycredit.ui.calculator.CalculatorActivity;
import ua.mycredit.mycredit.ui.calculator.CalculatorDialogFragment;
import ua.mycredit.mycredit.ui.calculator.CalculatorDialogFragment_MembersInjector;
import ua.mycredit.mycredit.ui.calculator.CalculatorFragment;
import ua.mycredit.mycredit.ui.calculator.CalculatorViewModel;
import ua.mycredit.mycredit.ui.calculator.CalculatorViewModel_Factory;
import ua.mycredit.mycredit.ui.calculator.InputPromoCodeDialogFragment;
import ua.mycredit.mycredit.ui.delegates.FbEmailDelegate_Factory;
import ua.mycredit.mycredit.ui.launch.SplashActivity;
import ua.mycredit.mycredit.ui.launch.SplashActivity_MembersInjector;
import ua.mycredit.mycredit.ui.launch.onboarding.OnboardingActivity;
import ua.mycredit.mycredit.ui.profile.CardsActivity;
import ua.mycredit.mycredit.ui.profile.MyCreditWebViewFragment;
import ua.mycredit.mycredit.ui.profile.ProfileActivity;
import ua.mycredit.mycredit.ui.profile.WebBankingActivity;
import ua.mycredit.mycredit.ui.profile.cards.AddCardActivity;
import ua.mycredit.mycredit.ui.profile.cards.CardSmsConfirmationFragment;
import ua.mycredit.mycredit.ui.profile.cards.CardSmsConfirmationViewModel;
import ua.mycredit.mycredit.ui.profile.cards.CardSmsConfirmationViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.cards.CardsFragment;
import ua.mycredit.mycredit.ui.profile.cards.CardsViewModel;
import ua.mycredit.mycredit.ui.profile.cards.CardsViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.cards.NewCardBackFragment;
import ua.mycredit.mycredit.ui.profile.cards.NewCardBackViewModel;
import ua.mycredit.mycredit.ui.profile.cards.NewCardBackViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.cards.NewCardFrontFragment;
import ua.mycredit.mycredit.ui.profile.credit.AgreementActivity;
import ua.mycredit.mycredit.ui.profile.credit.AgreementFragment;
import ua.mycredit.mycredit.ui.profile.credit.AgreementViewModel;
import ua.mycredit.mycredit.ui.profile.credit.AgreementViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.credit.StatusFragment;
import ua.mycredit.mycredit.ui.profile.credit.StatusViewModel;
import ua.mycredit.mycredit.ui.profile.credit.StatusViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.history.HistoryFragment;
import ua.mycredit.mycredit.ui.profile.history.HistoryViewModel;
import ua.mycredit.mycredit.ui.profile.history.HistoryViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.profile.ProfileFragment;
import ua.mycredit.mycredit.ui.profile.profile.ProfileViewModel;
import ua.mycredit.mycredit.ui.profile.profile.ProfileViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.profile.ProlongationPreferencesActivity;
import ua.mycredit.mycredit.ui.profile.profile.ProlongationPreferencesFragment;
import ua.mycredit.mycredit.ui.profile.profile.ProlongationPreferencesViewModel;
import ua.mycredit.mycredit.ui.profile.profile.ProlongationPreferencesViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.profile.contacts.ContactsActivity;
import ua.mycredit.mycredit.ui.profile.profile.contacts.ContactsFragment;
import ua.mycredit.mycredit.ui.profile.profile.contacts.ContactsFragment_MembersInjector;
import ua.mycredit.mycredit.ui.profile.profile.contacts.EditPasswordFragment;
import ua.mycredit.mycredit.ui.profile.profile.contacts.EditPasswordViewModel;
import ua.mycredit.mycredit.ui.profile.profile.contacts.EditPasswordViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.profile.details.DetailsActivity;
import ua.mycredit.mycredit.ui.profile.profile.details.DetailsViewModel;
import ua.mycredit.mycredit.ui.profile.profile.details.DetailsViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.profile.details.UneditablePersonalDataDialog;
import ua.mycredit.mycredit.ui.profile.profile.faq.FaqActivity;
import ua.mycredit.mycredit.ui.profile.repayloan.BankFragment;
import ua.mycredit.mycredit.ui.profile.repayloan.BankFragmentViewModel;
import ua.mycredit.mycredit.ui.profile.repayloan.BankFragmentViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.repayloan.CardsPickerFragment;
import ua.mycredit.mycredit.ui.profile.repayloan.PreferRepayAmountInputDialogFragment;
import ua.mycredit.mycredit.ui.profile.repayloan.RepayByCardFragment;
import ua.mycredit.mycredit.ui.profile.repayloan.RepayByCardViewModel;
import ua.mycredit.mycredit.ui.profile.repayloan.RepayByCardViewModel_Factory;
import ua.mycredit.mycredit.ui.profile.repayloan.RepayLoanActivity;
import ua.mycredit.mycredit.ui.profile.repayloan.TerminalsFragment;

public final class DaggerAppComponent implements AppComponent {
  private FirebaseModule firebaseModule;

  private Context context;

  private Provider<ActivitiesModule_SplashActivityInjector.SplashActivitySubcomponent.Builder>
      splashActivitySubcomponentBuilderProvider;

  private Provider<
          ActivitiesModule_OnboardingActivityInjector.OnboardingActivitySubcomponent.Builder>
      onboardingActivitySubcomponentBuilderProvider;

  private Provider<
          ActivitiesModule_CalculatorActivityInjector.CalculatorActivitySubcomponent.Builder>
      calculatorActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_SignInActivityInjector.SignInActivitySubcomponent.Builder>
      signInActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_SignUpActivityInjector.SignUpActivitySubcomponent.Builder>
      signUpActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_ProfileActivityInjector.ProfileActivitySubcomponent.Builder>
      profileActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_FaqActivityInjector.FaqActivitySubcomponent.Builder>
      faqActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_DetailsActivityInjector.DetailsActivitySubcomponent.Builder>
      detailsActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_ContactsActivity.ContactsActivitySubcomponent.Builder>
      contactsActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_AddCardActivity.AddCardActivitySubcomponent.Builder>
      addCardActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_AddRepayLoanActivity.RepayLoanActivitySubcomponent.Builder>
      repayLoanActivitySubcomponentBuilderProvider;

  private Provider<
          ActivitiesModule_CardWebVerificationActivity.WebBankingActivitySubcomponent.Builder>
      webBankingActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_AgreementActivity.AgreementActivitySubcomponent.Builder>
      agreementActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_CardsActivity.CardsActivitySubcomponent.Builder>
      cardsActivitySubcomponentBuilderProvider;

  private Provider<ActivitiesModule_ResetPasswordActivity.ResetPasswordActivitySubcomponent.Builder>
      resetPasswordActivitySubcomponentBuilderProvider;

  private Provider<
          ActivitiesModule_ProlongationPreferencesDialogActivity
              .ProlongationPreferencesActivitySubcomponent.Builder>
      prolongationPreferencesActivitySubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_CalculatorFragmentInjector.CalculatorFragmentSubcomponent.Builder>
      calculatorFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_SignUpPhoneFragmentInjector.SignUpPhoneFragmentSubcomponent.Builder>
      signUpPhoneFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_SignUpSMSFragmentInjector.SignUpSMSFragmentSubcomponent.Builder>
      signUpSMSFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_PasswordFragment.PasswordFragmentSubcomponent.Builder>
      passwordFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_PersonalInformationFragmentInjector.PersonalInfoFragmentSubcomponent
              .Builder>
      personalInfoFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_ExtraPersonalInfoFragmentInjector.ExtraPersonalInfoFragmentSubcomponent
              .Builder>
      extraPersonalInfoFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_PersonalDataFragmentInjector.PersonalDataFragmentSubcomponent.Builder>
      personalDataFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_CalculatorDialogFragmentInjector.CalculatorDialogFragmentSubcomponent
              .Builder>
      calculatorDialogFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_SignUpAddressFragmentInjector.SignUpAddressFragmentSubcomponent.Builder>
      signUpAddressFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_PassportFragment.PassportFragmentSubcomponent.Builder>
      passportFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_WorkFragmentInjector.EmployedFragmentSubcomponent.Builder>
      employedFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_UnemployedFragment.UnemployedFragmentSubcomponent.Builder>
      unemployedFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_BusinessmanFragment.BusinessmanFragmentSubcomponent.Builder>
      businessmanFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_PensionerFragment.PensionerFragmentSubcomponent.Builder>
      pensionerFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_StudentFragment.StudentFragmentSubcomponent.Builder>
      studentFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_FinanceFragment.FinanceFragmentSubcomponent.Builder>
      financeFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_InvalidFragment.InvalidFragmentSubcomponent.Builder>
      invalidFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_DecreeFragment.DecreeFragmentSubcomponent.Builder>
      decreeFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_HousewifeFragment.HousewifeFragmentSubcomponent.Builder>
      housewifeFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_TemporarilyUnemployedFragment.TemporarilyUnemployedFragmentSubcomponent
              .Builder>
      temporarilyUnemployedFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_CardFrontFragment.CardFrontFragmentSubcomponent.Builder>
      cardFrontFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_CardBackFragment.CardBackFragmentSubcomponent.Builder>
      cardBackFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_TextInputDialogFragment.TextInputDialogFragmentSubcomponent.Builder>
      textInputDialogFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_HoneInputDialogFragment.PhoneInputDialogFragmentSubcomponent.Builder>
      phoneInputDialogFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_ProgressDialogFragment.ProgressDialogFragmentSubcomponent.Builder>
      progressDialogFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_SignInFragment.SignInFragmentSubcomponent.Builder>
      signInFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_HistoryFragment.HistoryFragmentSubcomponent.Builder>
      historyFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_QuestionsFragment.ProfileFragmentSubcomponent.Builder>
      profileFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_EditPasswordFragment.EditPasswordFragmentSubcomponent.Builder>
      editPasswordFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_ContactsFragment.ContactsFragmentSubcomponent.Builder>
      contactsFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_CardsFragment.CardsFragmentSubcomponent.Builder>
      cardsFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_NewCardFrontFragment.NewCardFrontFragmentSubcomponent.Builder>
      newCardFrontFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_NewCardBackFragment.NewCardBackFragmentSubcomponent.Builder>
      newCardBackFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_CardSmsFragment.CardSmsConfirmationFragmentSubcomponent.Builder>
      cardSmsConfirmationFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_CreditFragment.StatusFragmentSubcomponent.Builder>
      statusFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_InputPromoCodeDialogFragment.InputPromoCodeDialogFragmentSubcomponent
              .Builder>
      inputPromoCodeDialogFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_TerminalsFragment.TerminalsFragmentSubcomponent.Builder>
      terminalsFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_CardFragment.RepayByCardFragmentSubcomponent.Builder>
      repayByCardFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_BankFragment.BankFragmentSubcomponent.Builder>
      bankFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_CardWebVerificationFragment.MyCreditWebViewFragmentSubcomponent.Builder>
      myCreditWebViewFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_AgreementFragment.AgreementFragmentSubcomponent.Builder>
      agreementFragmentSubcomponentBuilderProvider;

  private Provider<FragmentsModule_CardsPickerFragment.CardsPickerFragmentSubcomponent.Builder>
      cardsPickerFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_ResetPasswordFragment.ResetPasswordByPhoneFragmentSubcomponent.Builder>
      resetPasswordByPhoneFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_ProlongationPreferencesFragment
              .ProlongationPreferencesFragmentSubcomponent.Builder>
      prolongationPreferencesFragmentSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_UneditablePersonalDataDialog.UneditablePersonalDataDialogSubcomponent
              .Builder>
      uneditablePersonalDataDialogSubcomponentBuilderProvider;

  private Provider<
          FragmentsModule_PreferRepayAmountInputDialogFragment
              .PreferRepayAmountInputDialogFragmentSubcomponent.Builder>
      preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider;

  private Provider<NavigatorHolder> provideNavigatorHolderProvider;

  private Provider<LocalStorageImpl> localStorageImplProvider;

  private Provider<Router> provideRouterProvider;

  private Provider<AppEvents> appEventsProvider;

  private Provider<LogouterImpl> logouterImplProvider;

  private NetworkModule_ProvideInterceptorFactory provideInterceptorProvider;

  private NetworkModule_ProvideLoggingInterceptorFactory provideLoggingInterceptorProvider;

  private NetworkModule_ProvideOkHttpClientFactory provideOkHttpClientProvider;

  private NetworkModule_ProvideRetrofitFactory provideRetrofitProvider;

  private NetworkModule_ProvideApiFactory provideApiProvider;

  private NetworkModule_ProvideRetrofitCpaFactory provideRetrofitCpaProvider;

  private NetworkModule_ProvideApiCpaFactory provideApiCpaProvider;

  private Provider<Context> contextProvider;

  private Provider<NetworkFacadeImpl> networkFacadeImplProvider;

  private Provider<ProductRepo> productRepoProvider;

  private Provider<Map<BaseUseCase.SchedulerType, ? extends Scheduler>>
      appExecutionSchedulersProvider;

  private Provider<AppMetaDataImpl> appMetaDataImplProvider;

  private GetProductByPromoCodeUseCase_Factory getProductByPromoCodeUseCaseProvider;

  private ApplyForCreditUseCase_Factory applyForCreditUseCaseProvider;

  private CPAUseCase_Factory cPAUseCaseProvider;

  private FirebaseModule_GetFirebaseAnalyticsFactory getFirebaseAnalyticsProvider;

  private Provider<MessagesMapperImpl> messagesMapperImplProvider;

  private CalculatorViewModel_Factory calculatorViewModelProvider;

  private RequestSmsIfPhoneValidUseCase_Factory requestSmsIfPhoneValidUseCaseProvider;

  private Provider<ProfileRepo> profileRepoProvider;

  private SignInUseCase_Factory signInUseCaseProvider;

  private SignUpPhoneViewModel_Factory signUpPhoneViewModelProvider;

  private VerifySmsCodeUseCase_Factory verifySmsCodeUseCaseProvider;

  private CountDownUseCase_Factory countDownUseCaseProvider;

  private SignUpSMSViewModel_Factory signUpSMSViewModelProvider;

  private FbEmailDelegate_Factory fbEmailDelegateProvider;

  private PasswordViewModel_Factory passwordViewModelProvider;

  private SignUpProgressViewModel_Factory signUpProgressViewModelProvider;

  private CheckTinUseCase_Factory checkTinUseCaseProvider;

  private PhoneOptionsUseCase_Factory phoneOptionsUseCaseProvider;

  private PersonalDataViewModel_Factory personalDataViewModelProvider;

  private PersonalInfoViewModel_Factory personalInfoViewModelProvider;

  private ExtraPersonalInfoViewModel_Factory extraPersonalInfoViewModelProvider;

  private SignUpAddressViewModel_Factory signUpAddressViewModelProvider;

  private PassportViewModel_Factory passportViewModelProvider;

  private EmployedViewModel_Factory employedViewModelProvider;

  private UnemployedViewModel_Factory unemployedViewModelProvider;

  private BusinessmanViewModel_Factory businessmanViewModelProvider;

  private PensionerViewModel_Factory pensionerViewModelProvider;

  private StudentViewModel_Factory studentViewModelProvider;

  private FinanceViewModel_Factory financeViewModelProvider;

  private InvalidViewModel_Factory invalidViewModelProvider;

  private DecreeViewModel_Factory decreeViewModelProvider;

  private HousewifeViewModel_Factory housewifeViewModelProvider;

  private TemporarilyUnemployedViewModel_Factory temporarilyUnemployedViewModelProvider;

  private UpdateProfileUseCase_Factory updateProfileUseCaseProvider;

  private VerifyCardUseCase_Factory verifyCardUseCaseProvider;

  private CardBackViewModel_Factory cardBackViewModelProvider;

  private SignInViewModel_Factory signInViewModelProvider;

  private LoadHistoryUseCase_Factory loadHistoryUseCaseProvider;

  private HistoryViewModel_Factory historyViewModelProvider;

  private LoadProfileUseCase_Factory loadProfileUseCaseProvider;

  private ProfileViewModel_Factory profileViewModelProvider;

  private EditPasswordUseCase_Factory editPasswordUseCaseProvider;

  private ResetPasswordUseCase_Factory resetPasswordUseCaseProvider;

  private EditPasswordViewModel_Factory editPasswordViewModelProvider;

  private DetailsViewModel_Factory detailsViewModelProvider;

  private LoadCardsUseCase_Factory loadCardsUseCaseProvider;

  private MarkAsMainUseCase_Factory markAsMainUseCaseProvider;

  private DeleteCardUseCase_Factory deleteCardUseCaseProvider;

  private CardsViewModel_Factory cardsViewModelProvider;

  private NewCardBackViewModel_Factory newCardBackViewModelProvider;

  private CardSmsConfirmationViewModel_Factory cardSmsConfirmationViewModelProvider;

  private GetStatusUseCase_Factory getStatusUseCaseProvider;

  private GetContractAdditionsUseCase_Factory getContractAdditionsUseCaseProvider;

  private RestructureCreditUseCase_Factory restructureCreditUseCaseProvider;

  private PhoneContactsUseCase_Factory phoneContactsUseCaseProvider;

  private StatusViewModel_Factory statusViewModelProvider;

  private BankFragmentViewModel_Factory bankFragmentViewModelProvider;

  private GetPaymentUrlUseCase_Factory getPaymentUrlUseCaseProvider;

  private RepayByCardViewModel_Factory repayByCardViewModelProvider;

  private GetAgreementUseCase_Factory getAgreementUseCaseProvider;

  private AcceptAgreementUseCase_Factory acceptAgreementUseCaseProvider;

  private AgreementViewModel_Factory agreementViewModelProvider;

  private RequestResetPasswordSmsUseCase_Factory requestResetPasswordSmsUseCaseProvider;

  private ResetPasswordByPhoneViewModel_Factory resetPasswordByPhoneViewModelProvider;

  private ProlongUseCase_Factory prolongUseCaseProvider;

  private ProlongationPreferencesViewModel_Factory prolongationPreferencesViewModelProvider;

  private Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>>
      mapOfClassOfAndProviderOfViewModelProvider;

  private Provider<ViewModelFactoryImpl> viewModelFactoryImplProvider;

  private DaggerAppComponent(Builder builder) {
    initialize(builder);
    initialize2(builder);
  }

  public static AppComponent.Builder builder() {
    return new Builder();
  }

  private Map<Class<? extends Activity>, Provider<AndroidInjector.Factory<? extends Activity>>>
      getMapOfClassOfAndProviderOfFactoryOf() {
    return ImmutableMap
        .<Class<? extends Activity>, Provider<AndroidInjector.Factory<? extends Activity>>>builder()
        .put(SplashActivity.class, (Provider) splashActivitySubcomponentBuilderProvider)
        .put(OnboardingActivity.class, (Provider) onboardingActivitySubcomponentBuilderProvider)
        .put(CalculatorActivity.class, (Provider) calculatorActivitySubcomponentBuilderProvider)
        .put(SignInActivity.class, (Provider) signInActivitySubcomponentBuilderProvider)
        .put(SignUpActivity.class, (Provider) signUpActivitySubcomponentBuilderProvider)
        .put(ProfileActivity.class, (Provider) profileActivitySubcomponentBuilderProvider)
        .put(FaqActivity.class, (Provider) faqActivitySubcomponentBuilderProvider)
        .put(DetailsActivity.class, (Provider) detailsActivitySubcomponentBuilderProvider)
        .put(ContactsActivity.class, (Provider) contactsActivitySubcomponentBuilderProvider)
        .put(AddCardActivity.class, (Provider) addCardActivitySubcomponentBuilderProvider)
        .put(RepayLoanActivity.class, (Provider) repayLoanActivitySubcomponentBuilderProvider)
        .put(WebBankingActivity.class, (Provider) webBankingActivitySubcomponentBuilderProvider)
        .put(AgreementActivity.class, (Provider) agreementActivitySubcomponentBuilderProvider)
        .put(CardsActivity.class, (Provider) cardsActivitySubcomponentBuilderProvider)
        .put(
            ResetPasswordActivity.class,
            (Provider) resetPasswordActivitySubcomponentBuilderProvider)
        .put(
            ProlongationPreferencesActivity.class,
            (Provider) prolongationPreferencesActivitySubcomponentBuilderProvider)
        .build();
  }

  private DispatchingAndroidInjector<Activity> getDispatchingAndroidInjectorOfActivity() {
    return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
        getMapOfClassOfAndProviderOfFactoryOf());
  }

  private FirebaseAnalytics getFirebaseAnalytics() {
    return FirebaseModule_GetFirebaseAnalyticsFactory.proxyGetFirebaseAnalytics(
        firebaseModule, context);
  }

  private SignUpProgressViewModel getSignUpProgressViewModel() {
    return injectSignUpProgressViewModel(
        SignUpProgressViewModel_Factory.newSignUpProgressViewModel());
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.splashActivitySubcomponentBuilderProvider =
        new Provider<ActivitiesModule_SplashActivityInjector.SplashActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_SplashActivityInjector.SplashActivitySubcomponent.Builder get() {
            return new SplashActivitySubcomponentBuilder();
          }
        };
    this.onboardingActivitySubcomponentBuilderProvider =
        new Provider<
            ActivitiesModule_OnboardingActivityInjector.OnboardingActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_OnboardingActivityInjector.OnboardingActivitySubcomponent.Builder
              get() {
            return new OnboardingActivitySubcomponentBuilder();
          }
        };
    this.calculatorActivitySubcomponentBuilderProvider =
        new Provider<
            ActivitiesModule_CalculatorActivityInjector.CalculatorActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_CalculatorActivityInjector.CalculatorActivitySubcomponent.Builder
              get() {
            return new CalculatorActivitySubcomponentBuilder();
          }
        };
    this.signInActivitySubcomponentBuilderProvider =
        new Provider<ActivitiesModule_SignInActivityInjector.SignInActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_SignInActivityInjector.SignInActivitySubcomponent.Builder get() {
            return new SignInActivitySubcomponentBuilder();
          }
        };
    this.signUpActivitySubcomponentBuilderProvider =
        new Provider<ActivitiesModule_SignUpActivityInjector.SignUpActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_SignUpActivityInjector.SignUpActivitySubcomponent.Builder get() {
            return new SignUpActivitySubcomponentBuilder();
          }
        };
    this.profileActivitySubcomponentBuilderProvider =
        new Provider<
            ActivitiesModule_ProfileActivityInjector.ProfileActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_ProfileActivityInjector.ProfileActivitySubcomponent.Builder
              get() {
            return new ProfileActivitySubcomponentBuilder();
          }
        };
    this.faqActivitySubcomponentBuilderProvider =
        new Provider<ActivitiesModule_FaqActivityInjector.FaqActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_FaqActivityInjector.FaqActivitySubcomponent.Builder get() {
            return new FaqActivitySubcomponentBuilder();
          }
        };
    this.detailsActivitySubcomponentBuilderProvider =
        new Provider<
            ActivitiesModule_DetailsActivityInjector.DetailsActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_DetailsActivityInjector.DetailsActivitySubcomponent.Builder
              get() {
            return new DetailsActivitySubcomponentBuilder();
          }
        };
    this.contactsActivitySubcomponentBuilderProvider =
        new Provider<ActivitiesModule_ContactsActivity.ContactsActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_ContactsActivity.ContactsActivitySubcomponent.Builder get() {
            return new ContactsActivitySubcomponentBuilder();
          }
        };
    this.addCardActivitySubcomponentBuilderProvider =
        new Provider<ActivitiesModule_AddCardActivity.AddCardActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_AddCardActivity.AddCardActivitySubcomponent.Builder get() {
            return new AddCardActivitySubcomponentBuilder();
          }
        };
    this.repayLoanActivitySubcomponentBuilderProvider =
        new Provider<
            ActivitiesModule_AddRepayLoanActivity.RepayLoanActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_AddRepayLoanActivity.RepayLoanActivitySubcomponent.Builder get() {
            return new RepayLoanActivitySubcomponentBuilder();
          }
        };
    this.webBankingActivitySubcomponentBuilderProvider =
        new Provider<
            ActivitiesModule_CardWebVerificationActivity.WebBankingActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_CardWebVerificationActivity.WebBankingActivitySubcomponent.Builder
              get() {
            return new WebBankingActivitySubcomponentBuilder();
          }
        };
    this.agreementActivitySubcomponentBuilderProvider =
        new Provider<ActivitiesModule_AgreementActivity.AgreementActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_AgreementActivity.AgreementActivitySubcomponent.Builder get() {
            return new AgreementActivitySubcomponentBuilder();
          }
        };
    this.cardsActivitySubcomponentBuilderProvider =
        new Provider<ActivitiesModule_CardsActivity.CardsActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_CardsActivity.CardsActivitySubcomponent.Builder get() {
            return new CardsActivitySubcomponentBuilder();
          }
        };
    this.resetPasswordActivitySubcomponentBuilderProvider =
        new Provider<
            ActivitiesModule_ResetPasswordActivity.ResetPasswordActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_ResetPasswordActivity.ResetPasswordActivitySubcomponent.Builder
              get() {
            return new ResetPasswordActivitySubcomponentBuilder();
          }
        };
    this.prolongationPreferencesActivitySubcomponentBuilderProvider =
        new Provider<
            ActivitiesModule_ProlongationPreferencesDialogActivity
                .ProlongationPreferencesActivitySubcomponent.Builder>() {
          @Override
          public ActivitiesModule_ProlongationPreferencesDialogActivity
                  .ProlongationPreferencesActivitySubcomponent.Builder
              get() {
            return new ProlongationPreferencesActivitySubcomponentBuilder();
          }
        };
    this.calculatorFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_CalculatorFragmentInjector.CalculatorFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_CalculatorFragmentInjector.CalculatorFragmentSubcomponent.Builder
              get() {
            return new CalculatorFragmentSubcomponentBuilder();
          }
        };
    this.signUpPhoneFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_SignUpPhoneFragmentInjector.SignUpPhoneFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_SignUpPhoneFragmentInjector.SignUpPhoneFragmentSubcomponent.Builder
              get() {
            return new SignUpPhoneFragmentSubcomponentBuilder();
          }
        };
    this.signUpSMSFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_SignUpSMSFragmentInjector.SignUpSMSFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_SignUpSMSFragmentInjector.SignUpSMSFragmentSubcomponent.Builder
              get() {
            return new SignUpSMSFragmentSubcomponentBuilder();
          }
        };
    this.passwordFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_PasswordFragment.PasswordFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_PasswordFragment.PasswordFragmentSubcomponent.Builder get() {
            return new PasswordFragmentSubcomponentBuilder();
          }
        };
    this.personalInfoFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_PersonalInformationFragmentInjector.PersonalInfoFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_PersonalInformationFragmentInjector
                  .PersonalInfoFragmentSubcomponent.Builder
              get() {
            return new PersonalInfoFragmentSubcomponentBuilder();
          }
        };
    this.extraPersonalInfoFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_ExtraPersonalInfoFragmentInjector.ExtraPersonalInfoFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_ExtraPersonalInfoFragmentInjector
                  .ExtraPersonalInfoFragmentSubcomponent.Builder
              get() {
            return new ExtraPersonalInfoFragmentSubcomponentBuilder();
          }
        };
    this.personalDataFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_PersonalDataFragmentInjector.PersonalDataFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_PersonalDataFragmentInjector.PersonalDataFragmentSubcomponent
                  .Builder
              get() {
            return new PersonalDataFragmentSubcomponentBuilder();
          }
        };
    this.calculatorDialogFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_CalculatorDialogFragmentInjector.CalculatorDialogFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_CalculatorDialogFragmentInjector
                  .CalculatorDialogFragmentSubcomponent.Builder
              get() {
            return new CalculatorDialogFragmentSubcomponentBuilder();
          }
        };
    this.signUpAddressFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_SignUpAddressFragmentInjector.SignUpAddressFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_SignUpAddressFragmentInjector.SignUpAddressFragmentSubcomponent
                  .Builder
              get() {
            return new SignUpAddressFragmentSubcomponentBuilder();
          }
        };
    this.passportFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_PassportFragment.PassportFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_PassportFragment.PassportFragmentSubcomponent.Builder get() {
            return new PassportFragmentSubcomponentBuilder();
          }
        };
    this.employedFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_WorkFragmentInjector.EmployedFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_WorkFragmentInjector.EmployedFragmentSubcomponent.Builder get() {
            return new EmployedFragmentSubcomponentBuilder();
          }
        };
    this.unemployedFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_UnemployedFragment.UnemployedFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_UnemployedFragment.UnemployedFragmentSubcomponent.Builder get() {
            return new UnemployedFragmentSubcomponentBuilder();
          }
        };
    this.businessmanFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_BusinessmanFragment.BusinessmanFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_BusinessmanFragment.BusinessmanFragmentSubcomponent.Builder get() {
            return new BusinessmanFragmentSubcomponentBuilder();
          }
        };
    this.pensionerFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_PensionerFragment.PensionerFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_PensionerFragment.PensionerFragmentSubcomponent.Builder get() {
            return new PensionerFragmentSubcomponentBuilder();
          }
        };
    this.studentFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_StudentFragment.StudentFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_StudentFragment.StudentFragmentSubcomponent.Builder get() {
            return new StudentFragmentSubcomponentBuilder();
          }
        };
    this.financeFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_FinanceFragment.FinanceFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_FinanceFragment.FinanceFragmentSubcomponent.Builder get() {
            return new FinanceFragmentSubcomponentBuilder();
          }
        };
    this.invalidFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_InvalidFragment.InvalidFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_InvalidFragment.InvalidFragmentSubcomponent.Builder get() {
            return new InvalidFragmentSubcomponentBuilder();
          }
        };
    this.decreeFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_DecreeFragment.DecreeFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_DecreeFragment.DecreeFragmentSubcomponent.Builder get() {
            return new DecreeFragmentSubcomponentBuilder();
          }
        };
    this.housewifeFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_HousewifeFragment.HousewifeFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_HousewifeFragment.HousewifeFragmentSubcomponent.Builder get() {
            return new HousewifeFragmentSubcomponentBuilder();
          }
        };
    this.temporarilyUnemployedFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_TemporarilyUnemployedFragment.TemporarilyUnemployedFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_TemporarilyUnemployedFragment
                  .TemporarilyUnemployedFragmentSubcomponent.Builder
              get() {
            return new TemporarilyUnemployedFragmentSubcomponentBuilder();
          }
        };
    this.cardFrontFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_CardFrontFragment.CardFrontFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_CardFrontFragment.CardFrontFragmentSubcomponent.Builder get() {
            return new CardFrontFragmentSubcomponentBuilder();
          }
        };
    this.cardBackFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_CardBackFragment.CardBackFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_CardBackFragment.CardBackFragmentSubcomponent.Builder get() {
            return new CardBackFragmentSubcomponentBuilder();
          }
        };
    this.textInputDialogFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_TextInputDialogFragment.TextInputDialogFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_TextInputDialogFragment.TextInputDialogFragmentSubcomponent.Builder
              get() {
            return new TextInputDialogFragmentSubcomponentBuilder();
          }
        };
    this.phoneInputDialogFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_HoneInputDialogFragment.PhoneInputDialogFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_HoneInputDialogFragment.PhoneInputDialogFragmentSubcomponent
                  .Builder
              get() {
            return new PhoneInputDialogFragmentSubcomponentBuilder();
          }
        };
    this.progressDialogFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_ProgressDialogFragment.ProgressDialogFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_ProgressDialogFragment.ProgressDialogFragmentSubcomponent.Builder
              get() {
            return new ProgressDialogFragmentSubcomponentBuilder();
          }
        };
    this.signInFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_SignInFragment.SignInFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_SignInFragment.SignInFragmentSubcomponent.Builder get() {
            return new SignInFragmentSubcomponentBuilder();
          }
        };
    this.historyFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_HistoryFragment.HistoryFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_HistoryFragment.HistoryFragmentSubcomponent.Builder get() {
            return new HistoryFragmentSubcomponentBuilder();
          }
        };
    this.profileFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_QuestionsFragment.ProfileFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_QuestionsFragment.ProfileFragmentSubcomponent.Builder get() {
            return new ProfileFragmentSubcomponentBuilder();
          }
        };
    this.editPasswordFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_EditPasswordFragment.EditPasswordFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_EditPasswordFragment.EditPasswordFragmentSubcomponent.Builder
              get() {
            return new EditPasswordFragmentSubcomponentBuilder();
          }
        };
    this.contactsFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_ContactsFragment.ContactsFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_ContactsFragment.ContactsFragmentSubcomponent.Builder get() {
            return new ContactsFragmentSubcomponentBuilder();
          }
        };
    this.cardsFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_CardsFragment.CardsFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_CardsFragment.CardsFragmentSubcomponent.Builder get() {
            return new CardsFragmentSubcomponentBuilder();
          }
        };
    this.newCardFrontFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_NewCardFrontFragment.NewCardFrontFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_NewCardFrontFragment.NewCardFrontFragmentSubcomponent.Builder
              get() {
            return new NewCardFrontFragmentSubcomponentBuilder();
          }
        };
    this.newCardBackFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_NewCardBackFragment.NewCardBackFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_NewCardBackFragment.NewCardBackFragmentSubcomponent.Builder get() {
            return new NewCardBackFragmentSubcomponentBuilder();
          }
        };
    this.cardSmsConfirmationFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_CardSmsFragment.CardSmsConfirmationFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_CardSmsFragment.CardSmsConfirmationFragmentSubcomponent.Builder
              get() {
            return new CardSmsConfirmationFragmentSubcomponentBuilder();
          }
        };
    this.statusFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_CreditFragment.StatusFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_CreditFragment.StatusFragmentSubcomponent.Builder get() {
            return new StatusFragmentSubcomponentBuilder();
          }
        };
    this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_InputPromoCodeDialogFragment.InputPromoCodeDialogFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_InputPromoCodeDialogFragment
                  .InputPromoCodeDialogFragmentSubcomponent.Builder
              get() {
            return new InputPromoCodeDialogFragmentSubcomponentBuilder();
          }
        };
    this.terminalsFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_TerminalsFragment.TerminalsFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_TerminalsFragment.TerminalsFragmentSubcomponent.Builder get() {
            return new TerminalsFragmentSubcomponentBuilder();
          }
        };
    this.repayByCardFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_CardFragment.RepayByCardFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_CardFragment.RepayByCardFragmentSubcomponent.Builder get() {
            return new RepayByCardFragmentSubcomponentBuilder();
          }
        };
    this.bankFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_BankFragment.BankFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_BankFragment.BankFragmentSubcomponent.Builder get() {
            return new BankFragmentSubcomponentBuilder();
          }
        };
    this.myCreditWebViewFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_CardWebVerificationFragment.MyCreditWebViewFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_CardWebVerificationFragment.MyCreditWebViewFragmentSubcomponent
                  .Builder
              get() {
            return new MyCreditWebViewFragmentSubcomponentBuilder();
          }
        };
    this.agreementFragmentSubcomponentBuilderProvider =
        new Provider<FragmentsModule_AgreementFragment.AgreementFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_AgreementFragment.AgreementFragmentSubcomponent.Builder get() {
            return new AgreementFragmentSubcomponentBuilder();
          }
        };
    this.cardsPickerFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_CardsPickerFragment.CardsPickerFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_CardsPickerFragment.CardsPickerFragmentSubcomponent.Builder get() {
            return new CardsPickerFragmentSubcomponentBuilder();
          }
        };
    this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_ResetPasswordFragment.ResetPasswordByPhoneFragmentSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_ResetPasswordFragment.ResetPasswordByPhoneFragmentSubcomponent
                  .Builder
              get() {
            return new ResetPasswordByPhoneFragmentSubcomponentBuilder();
          }
        };
    this.prolongationPreferencesFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_ProlongationPreferencesFragment
                .ProlongationPreferencesFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_ProlongationPreferencesFragment
                  .ProlongationPreferencesFragmentSubcomponent.Builder
              get() {
            return new ProlongationPreferencesFragmentSubcomponentBuilder();
          }
        };
    this.uneditablePersonalDataDialogSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_UneditablePersonalDataDialog.UneditablePersonalDataDialogSubcomponent
                .Builder>() {
          @Override
          public FragmentsModule_UneditablePersonalDataDialog
                  .UneditablePersonalDataDialogSubcomponent.Builder
              get() {
            return new UneditablePersonalDataDialogSubcomponentBuilder();
          }
        };
    this.preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider =
        new Provider<
            FragmentsModule_PreferRepayAmountInputDialogFragment
                .PreferRepayAmountInputDialogFragmentSubcomponent.Builder>() {
          @Override
          public FragmentsModule_PreferRepayAmountInputDialogFragment
                  .PreferRepayAmountInputDialogFragmentSubcomponent.Builder
              get() {
            return new PreferRepayAmountInputDialogFragmentSubcomponentBuilder();
          }
        };
    this.provideNavigatorHolderProvider =
        DoubleCheck.provider(
            RouterModule_ProvideNavigatorHolderFactory.create(builder.routerModule));
    this.localStorageImplProvider = DoubleCheck.provider(LocalStorageImpl_Factory.create());
    this.provideRouterProvider =
        DoubleCheck.provider(RouterModule_ProvideRouterFactory.create(builder.routerModule));
    this.appEventsProvider = DoubleCheck.provider(AppEvents_Factory.create());
    this.logouterImplProvider = DoubleCheck.provider(LogouterImpl_Factory.create());
    this.provideInterceptorProvider =
        NetworkModule_ProvideInterceptorFactory.create(builder.networkModule);
    this.provideLoggingInterceptorProvider =
        NetworkModule_ProvideLoggingInterceptorFactory.create(builder.networkModule);
    this.provideOkHttpClientProvider =
        NetworkModule_ProvideOkHttpClientFactory.create(
            builder.networkModule, provideInterceptorProvider, provideLoggingInterceptorProvider);
    this.provideRetrofitProvider =
        NetworkModule_ProvideRetrofitFactory.create(
            builder.networkModule, provideOkHttpClientProvider);
    this.provideApiProvider =
        NetworkModule_ProvideApiFactory.create(builder.networkModule, provideRetrofitProvider);
    this.provideRetrofitCpaProvider =
        NetworkModule_ProvideRetrofitCpaFactory.create(
            builder.networkModule, provideOkHttpClientProvider);
    this.provideApiCpaProvider =
        NetworkModule_ProvideApiCpaFactory.create(
            builder.networkModule, provideRetrofitCpaProvider);
    this.contextProvider = InstanceFactory.create(builder.context);
    this.networkFacadeImplProvider =
        DoubleCheck.provider(
            NetworkFacadeImpl_Factory.create(
                provideApiProvider, provideApiCpaProvider, contextProvider));
    this.productRepoProvider =
        DoubleCheck.provider(
            ProductRepo_Factory.create(
                (Provider) networkFacadeImplProvider, (Provider) localStorageImplProvider));
    this.appExecutionSchedulersProvider =
        DoubleCheck.provider(
            SchedulersModule_AppExecutionSchedulersFactory.create(builder.schedulersModule));
    this.appMetaDataImplProvider = DoubleCheck.provider(AppMetaDataImpl_Factory.create());
    this.getProductByPromoCodeUseCaseProvider =
        GetProductByPromoCodeUseCase_Factory.create(
            productRepoProvider,
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.applyForCreditUseCaseProvider =
        ApplyForCreditUseCase_Factory.create(
            productRepoProvider,
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.cPAUseCaseProvider =
        CPAUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.getFirebaseAnalyticsProvider =
        FirebaseModule_GetFirebaseAnalyticsFactory.create(builder.firebaseModule, contextProvider);
    this.messagesMapperImplProvider =
        DoubleCheck.provider(MessagesMapperImpl_Factory.create(contextProvider));
    this.calculatorViewModelProvider =
        CalculatorViewModel_Factory.create(
            getProductByPromoCodeUseCaseProvider,
            applyForCreditUseCaseProvider,
            cPAUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.requestSmsIfPhoneValidUseCaseProvider =
        RequestSmsIfPhoneValidUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.profileRepoProvider =
        DoubleCheck.provider(
            ProfileRepo_Factory.create(
                (Provider) networkFacadeImplProvider, (Provider) localStorageImplProvider));
    this.signInUseCaseProvider =
        SignInUseCase_Factory.create(
            profileRepoProvider,
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.signUpPhoneViewModelProvider =
        SignUpPhoneViewModel_Factory.create(
            requestSmsIfPhoneValidUseCaseProvider,
            signInUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.verifySmsCodeUseCaseProvider =
        VerifySmsCodeUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.countDownUseCaseProvider =
        CountDownUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.signUpSMSViewModelProvider =
        SignUpSMSViewModel_Factory.create(
            verifySmsCodeUseCaseProvider,
            requestSmsIfPhoneValidUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create(),
            countDownUseCaseProvider);
    this.fbEmailDelegateProvider = FbEmailDelegate_Factory.create(provideRouterProvider);
    this.passwordViewModelProvider =
        PasswordViewModel_Factory.create(
            fbEmailDelegateProvider,
            signInUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.signUpProgressViewModelProvider =
        SignUpProgressViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.checkTinUseCaseProvider =
        CheckTinUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.phoneOptionsUseCaseProvider =
        PhoneOptionsUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.personalDataViewModelProvider =
        PersonalDataViewModel_Factory.create(
            checkTinUseCaseProvider,
            phoneOptionsUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.personalInfoViewModelProvider =
        PersonalInfoViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.extraPersonalInfoViewModelProvider =
        ExtraPersonalInfoViewModel_Factory.create(
            fbEmailDelegateProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
  }

  @SuppressWarnings("unchecked")
  private void initialize2(final Builder builder) {
    this.signUpAddressViewModelProvider =
        SignUpAddressViewModel_Factory.create(
            (Provider) localStorageImplProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.passportViewModelProvider =
        PassportViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.employedViewModelProvider =
        EmployedViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.unemployedViewModelProvider =
        UnemployedViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.businessmanViewModelProvider =
        BusinessmanViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.pensionerViewModelProvider =
        PensionerViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.studentViewModelProvider =
        StudentViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.financeViewModelProvider =
        FinanceViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.invalidViewModelProvider =
        InvalidViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.decreeViewModelProvider =
        DecreeViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.housewifeViewModelProvider =
        HousewifeViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.temporarilyUnemployedViewModelProvider =
        TemporarilyUnemployedViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.updateProfileUseCaseProvider =
        UpdateProfileUseCase_Factory.create(
            profileRepoProvider,
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.verifyCardUseCaseProvider =
        VerifyCardUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.cardBackViewModelProvider =
        CardBackViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create(),
            updateProfileUseCaseProvider,
            verifyCardUseCaseProvider,
            applyForCreditUseCaseProvider,
            cPAUseCaseProvider);
    this.signInViewModelProvider =
        SignInViewModel_Factory.create(
            signInUseCaseProvider,
            phoneOptionsUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.loadHistoryUseCaseProvider =
        LoadHistoryUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.historyViewModelProvider =
        HistoryViewModel_Factory.create(
            loadHistoryUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.loadProfileUseCaseProvider =
        LoadProfileUseCase_Factory.create(
            profileRepoProvider,
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.profileViewModelProvider =
        ProfileViewModel_Factory.create(
            loadProfileUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.editPasswordUseCaseProvider =
        EditPasswordUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.resetPasswordUseCaseProvider =
        ResetPasswordUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.editPasswordViewModelProvider =
        EditPasswordViewModel_Factory.create(
            editPasswordUseCaseProvider,
            resetPasswordUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.detailsViewModelProvider =
        DetailsViewModel_Factory.create(
            updateProfileUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.loadCardsUseCaseProvider =
        LoadCardsUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.markAsMainUseCaseProvider =
        MarkAsMainUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.deleteCardUseCaseProvider =
        DeleteCardUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.cardsViewModelProvider =
        CardsViewModel_Factory.create(
            loadCardsUseCaseProvider,
            markAsMainUseCaseProvider,
            verifyCardUseCaseProvider,
            deleteCardUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.newCardBackViewModelProvider =
        NewCardBackViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create(),
            updateProfileUseCaseProvider,
            verifyCardUseCaseProvider,
            applyForCreditUseCaseProvider,
            cPAUseCaseProvider);
    this.cardSmsConfirmationViewModelProvider =
        CardSmsConfirmationViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.getStatusUseCaseProvider =
        GetStatusUseCase_Factory.create(
            productRepoProvider,
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.getContractAdditionsUseCaseProvider =
        GetContractAdditionsUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.restructureCreditUseCaseProvider =
        RestructureCreditUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.phoneContactsUseCaseProvider =
        PhoneContactsUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.statusViewModelProvider =
        StatusViewModel_Factory.create(
            getStatusUseCaseProvider,
            getContractAdditionsUseCaseProvider,
            restructureCreditUseCaseProvider,
            phoneContactsUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.bankFragmentViewModelProvider =
        BankFragmentViewModel_Factory.create(
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.getPaymentUrlUseCaseProvider =
        GetPaymentUrlUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.repayByCardViewModelProvider =
        RepayByCardViewModel_Factory.create(
            getPaymentUrlUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.getAgreementUseCaseProvider =
        GetAgreementUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.acceptAgreementUseCaseProvider =
        AcceptAgreementUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.agreementViewModelProvider =
        AgreementViewModel_Factory.create(
            getAgreementUseCaseProvider,
            acceptAgreementUseCaseProvider,
            cPAUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.requestResetPasswordSmsUseCaseProvider =
        RequestResetPasswordSmsUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.resetPasswordByPhoneViewModelProvider =
        ResetPasswordByPhoneViewModel_Factory.create(
            requestResetPasswordSmsUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.prolongUseCaseProvider =
        ProlongUseCase_Factory.create(
            (Provider) networkFacadeImplProvider,
            (Provider) localStorageImplProvider,
            appExecutionSchedulersProvider,
            (Provider) LoggerImpl_Factory.create(),
            (Provider) appMetaDataImplProvider);
    this.prolongationPreferencesViewModelProvider =
        ProlongationPreferencesViewModel_Factory.create(
            prolongUseCaseProvider,
            provideRouterProvider,
            appEventsProvider,
            (Provider) logouterImplProvider,
            getFirebaseAnalyticsProvider,
            (Provider) messagesMapperImplProvider,
            (Provider) localStorageImplProvider,
            (Provider) LoggerImpl_Factory.create());
    this.mapOfClassOfAndProviderOfViewModelProvider =
        MapProviderFactory.<Class<? extends ViewModel>, ViewModel>builder(35)
            .put(CalculatorViewModel.class, (Provider) calculatorViewModelProvider)
            .put(SignUpPhoneViewModel.class, (Provider) signUpPhoneViewModelProvider)
            .put(SignUpSMSViewModel.class, (Provider) signUpSMSViewModelProvider)
            .put(PasswordViewModel.class, (Provider) passwordViewModelProvider)
            .put(SignUpProgressViewModel.class, (Provider) signUpProgressViewModelProvider)
            .put(PersonalDataViewModel.class, (Provider) personalDataViewModelProvider)
            .put(PersonalInfoViewModel.class, (Provider) personalInfoViewModelProvider)
            .put(ExtraPersonalInfoViewModel.class, (Provider) extraPersonalInfoViewModelProvider)
            .put(SignUpAddressViewModel.class, (Provider) signUpAddressViewModelProvider)
            .put(PassportViewModel.class, (Provider) passportViewModelProvider)
            .put(EmployedViewModel.class, (Provider) employedViewModelProvider)
            .put(UnemployedViewModel.class, (Provider) unemployedViewModelProvider)
            .put(BusinessmanViewModel.class, (Provider) businessmanViewModelProvider)
            .put(PensionerViewModel.class, (Provider) pensionerViewModelProvider)
            .put(StudentViewModel.class, (Provider) studentViewModelProvider)
            .put(FinanceViewModel.class, (Provider) financeViewModelProvider)
            .put(InvalidViewModel.class, (Provider) invalidViewModelProvider)
            .put(DecreeViewModel.class, (Provider) decreeViewModelProvider)
            .put(HousewifeViewModel.class, (Provider) housewifeViewModelProvider)
            .put(
                TemporarilyUnemployedViewModel.class,
                (Provider) temporarilyUnemployedViewModelProvider)
            .put(CardBackViewModel.class, (Provider) cardBackViewModelProvider)
            .put(SignInViewModel.class, (Provider) signInViewModelProvider)
            .put(HistoryViewModel.class, (Provider) historyViewModelProvider)
            .put(ProfileViewModel.class, (Provider) profileViewModelProvider)
            .put(EditPasswordViewModel.class, (Provider) editPasswordViewModelProvider)
            .put(DetailsViewModel.class, (Provider) detailsViewModelProvider)
            .put(CardsViewModel.class, (Provider) cardsViewModelProvider)
            .put(NewCardBackViewModel.class, (Provider) newCardBackViewModelProvider)
            .put(
                CardSmsConfirmationViewModel.class, (Provider) cardSmsConfirmationViewModelProvider)
            .put(StatusViewModel.class, (Provider) statusViewModelProvider)
            .put(BankFragmentViewModel.class, (Provider) bankFragmentViewModelProvider)
            .put(RepayByCardViewModel.class, (Provider) repayByCardViewModelProvider)
            .put(AgreementViewModel.class, (Provider) agreementViewModelProvider)
            .put(
                ResetPasswordByPhoneViewModel.class,
                (Provider) resetPasswordByPhoneViewModelProvider)
            .put(
                ProlongationPreferencesViewModel.class,
                (Provider) prolongationPreferencesViewModelProvider)
            .build();
    this.viewModelFactoryImplProvider =
        DoubleCheck.provider(
            ViewModelFactoryImpl_Factory.create(mapOfClassOfAndProviderOfViewModelProvider));
    this.firebaseModule = builder.firebaseModule;
    this.context = builder.context;
  }

  @Override
  public void inject(AndroidApplication app) {
    injectAndroidApplication(app);
  }

  @CanIgnoreReturnValue
  private AndroidApplication injectAndroidApplication(AndroidApplication instance) {
    AndroidApplication_MembersInjector.injectDispatchingActivityInjector(
        instance, getDispatchingAndroidInjectorOfActivity());
    return instance;
  }

  @CanIgnoreReturnValue
  private SignUpProgressViewModel injectSignUpProgressViewModel(SignUpProgressViewModel instance) {
    BaseViewModel_MembersInjector.injectRouter(instance, provideRouterProvider.get());
    BaseViewModel_MembersInjector.injectEvents(instance, appEventsProvider.get());
    BaseViewModel_MembersInjector.injectLogouter(instance, logouterImplProvider.get());
    BaseViewModel_MembersInjector.injectAnalytics(instance, getFirebaseAnalytics());
    BaseViewModel_MembersInjector.injectMessagesMapper(instance, messagesMapperImplProvider.get());
    BaseViewModel_MembersInjector.injectStorage(instance, localStorageImplProvider.get());
    BaseViewModel_MembersInjector.injectLogger(instance, new LoggerImpl());
    BaseViewModel_MembersInjector.injectBindToAppEvents(instance);
    return instance;
  }

  private static final class Builder implements AppComponent.Builder {
    private RouterModule routerModule;

    private NetworkModule networkModule;

    private SchedulersModule schedulersModule;

    private FirebaseModule firebaseModule;

    private Context context;

    @Override
    public AppComponent build() {
      if (routerModule == null) {
        this.routerModule = new RouterModule();
      }
      if (networkModule == null) {
        this.networkModule = new NetworkModule();
      }
      if (schedulersModule == null) {
        this.schedulersModule = new SchedulersModule();
      }
      if (firebaseModule == null) {
        this.firebaseModule = new FirebaseModule();
      }
      if (context == null) {
        throw new IllegalStateException(Context.class.getCanonicalName() + " must be set");
      }
      return new DaggerAppComponent(this);
    }

    @Override
    public Builder context(Context context) {
      this.context = Preconditions.checkNotNull(context);
      return this;
    }
  }

  private final class SplashActivitySubcomponentBuilder
      extends ActivitiesModule_SplashActivityInjector.SplashActivitySubcomponent.Builder {
    private SplashActivity seedInstance;

    @Override
    public ActivitiesModule_SplashActivityInjector.SplashActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(SplashActivity.class.getCanonicalName() + " must be set");
      }
      return new SplashActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(SplashActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class SplashActivitySubcomponentImpl
      implements ActivitiesModule_SplashActivityInjector.SplashActivitySubcomponent {
    private SplashActivitySubcomponentImpl(SplashActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(SplashActivity arg0) {
      injectSplashActivity(arg0);
    }

    @CanIgnoreReturnValue
    private SplashActivity injectSplashActivity(SplashActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      SplashActivity_MembersInjector.injectLogouter(
          instance, DaggerAppComponent.this.logouterImplProvider.get());
      return instance;
    }
  }

  private final class OnboardingActivitySubcomponentBuilder
      extends ActivitiesModule_OnboardingActivityInjector.OnboardingActivitySubcomponent.Builder {
    private OnboardingActivity seedInstance;

    @Override
    public ActivitiesModule_OnboardingActivityInjector.OnboardingActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            OnboardingActivity.class.getCanonicalName() + " must be set");
      }
      return new OnboardingActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(OnboardingActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class OnboardingActivitySubcomponentImpl
      implements ActivitiesModule_OnboardingActivityInjector.OnboardingActivitySubcomponent {
    private OnboardingActivitySubcomponentImpl(OnboardingActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(OnboardingActivity arg0) {
      injectOnboardingActivity(arg0);
    }

    @CanIgnoreReturnValue
    private OnboardingActivity injectOnboardingActivity(OnboardingActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class CalculatorActivitySubcomponentBuilder
      extends ActivitiesModule_CalculatorActivityInjector.CalculatorActivitySubcomponent.Builder {
    private CalculatorActivity seedInstance;

    @Override
    public ActivitiesModule_CalculatorActivityInjector.CalculatorActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            CalculatorActivity.class.getCanonicalName() + " must be set");
      }
      return new CalculatorActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CalculatorActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CalculatorActivitySubcomponentImpl
      implements ActivitiesModule_CalculatorActivityInjector.CalculatorActivitySubcomponent {
    private CalculatorActivitySubcomponentImpl(CalculatorActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(CalculatorActivity arg0) {
      injectCalculatorActivity(arg0);
    }

    @CanIgnoreReturnValue
    private CalculatorActivity injectCalculatorActivity(CalculatorActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class SignInActivitySubcomponentBuilder
      extends ActivitiesModule_SignInActivityInjector.SignInActivitySubcomponent.Builder {
    private SignInActivity seedInstance;

    @Override
    public ActivitiesModule_SignInActivityInjector.SignInActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(SignInActivity.class.getCanonicalName() + " must be set");
      }
      return new SignInActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(SignInActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class SignInActivitySubcomponentImpl
      implements ActivitiesModule_SignInActivityInjector.SignInActivitySubcomponent {
    private SignInActivitySubcomponentImpl(SignInActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(SignInActivity arg0) {
      injectSignInActivity(arg0);
    }

    @CanIgnoreReturnValue
    private SignInActivity injectSignInActivity(SignInActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class SignUpActivitySubcomponentBuilder
      extends ActivitiesModule_SignUpActivityInjector.SignUpActivitySubcomponent.Builder {
    private SignUpActivity seedInstance;

    @Override
    public ActivitiesModule_SignUpActivityInjector.SignUpActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(SignUpActivity.class.getCanonicalName() + " must be set");
      }
      return new SignUpActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(SignUpActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class SignUpActivitySubcomponentImpl
      implements ActivitiesModule_SignUpActivityInjector.SignUpActivitySubcomponent {
    private SignUpActivitySubcomponentImpl(SignUpActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(SignUpActivity arg0) {
      injectSignUpActivity(arg0);
    }

    @CanIgnoreReturnValue
    private SignUpActivity injectSignUpActivity(SignUpActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      SelfBindingActivity_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      SignUpActivity_MembersInjector.injectSignUpViewModel(
          instance, DaggerAppComponent.this.getSignUpProgressViewModel());
      return instance;
    }
  }

  private final class ProfileActivitySubcomponentBuilder
      extends ActivitiesModule_ProfileActivityInjector.ProfileActivitySubcomponent.Builder {
    private ProfileActivity seedInstance;

    @Override
    public ActivitiesModule_ProfileActivityInjector.ProfileActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(ProfileActivity.class.getCanonicalName() + " must be set");
      }
      return new ProfileActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ProfileActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ProfileActivitySubcomponentImpl
      implements ActivitiesModule_ProfileActivityInjector.ProfileActivitySubcomponent {
    private ProfileActivitySubcomponentImpl(ProfileActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(ProfileActivity arg0) {
      injectProfileActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ProfileActivity injectProfileActivity(ProfileActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      SelfBindingActivity_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class FaqActivitySubcomponentBuilder
      extends ActivitiesModule_FaqActivityInjector.FaqActivitySubcomponent.Builder {
    private FaqActivity seedInstance;

    @Override
    public ActivitiesModule_FaqActivityInjector.FaqActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(FaqActivity.class.getCanonicalName() + " must be set");
      }
      return new FaqActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(FaqActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class FaqActivitySubcomponentImpl
      implements ActivitiesModule_FaqActivityInjector.FaqActivitySubcomponent {
    private FaqActivitySubcomponentImpl(FaqActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(FaqActivity arg0) {
      injectFaqActivity(arg0);
    }

    @CanIgnoreReturnValue
    private FaqActivity injectFaqActivity(FaqActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      SelfBindingActivity_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class DetailsActivitySubcomponentBuilder
      extends ActivitiesModule_DetailsActivityInjector.DetailsActivitySubcomponent.Builder {
    private DetailsActivity seedInstance;

    @Override
    public ActivitiesModule_DetailsActivityInjector.DetailsActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(DetailsActivity.class.getCanonicalName() + " must be set");
      }
      return new DetailsActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(DetailsActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class DetailsActivitySubcomponentImpl
      implements ActivitiesModule_DetailsActivityInjector.DetailsActivitySubcomponent {
    private DetailsActivitySubcomponentImpl(DetailsActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(DetailsActivity arg0) {
      injectDetailsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private DetailsActivity injectDetailsActivity(DetailsActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      SelfBindingActivity_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class ContactsActivitySubcomponentBuilder
      extends ActivitiesModule_ContactsActivity.ContactsActivitySubcomponent.Builder {
    private ContactsActivity seedInstance;

    @Override
    public ActivitiesModule_ContactsActivity.ContactsActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(ContactsActivity.class.getCanonicalName() + " must be set");
      }
      return new ContactsActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ContactsActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ContactsActivitySubcomponentImpl
      implements ActivitiesModule_ContactsActivity.ContactsActivitySubcomponent {
    private ContactsActivitySubcomponentImpl(ContactsActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(ContactsActivity arg0) {
      injectContactsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ContactsActivity injectContactsActivity(ContactsActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class AddCardActivitySubcomponentBuilder
      extends ActivitiesModule_AddCardActivity.AddCardActivitySubcomponent.Builder {
    private AddCardActivity seedInstance;

    @Override
    public ActivitiesModule_AddCardActivity.AddCardActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(AddCardActivity.class.getCanonicalName() + " must be set");
      }
      return new AddCardActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(AddCardActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class AddCardActivitySubcomponentImpl
      implements ActivitiesModule_AddCardActivity.AddCardActivitySubcomponent {
    private AddCardActivitySubcomponentImpl(AddCardActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(AddCardActivity arg0) {
      injectAddCardActivity(arg0);
    }

    @CanIgnoreReturnValue
    private AddCardActivity injectAddCardActivity(AddCardActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      SelfBindingActivity_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class RepayLoanActivitySubcomponentBuilder
      extends ActivitiesModule_AddRepayLoanActivity.RepayLoanActivitySubcomponent.Builder {
    private RepayLoanActivity seedInstance;

    @Override
    public ActivitiesModule_AddRepayLoanActivity.RepayLoanActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            RepayLoanActivity.class.getCanonicalName() + " must be set");
      }
      return new RepayLoanActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(RepayLoanActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class RepayLoanActivitySubcomponentImpl
      implements ActivitiesModule_AddRepayLoanActivity.RepayLoanActivitySubcomponent {
    private RepayLoanActivitySubcomponentImpl(RepayLoanActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(RepayLoanActivity arg0) {
      injectRepayLoanActivity(arg0);
    }

    @CanIgnoreReturnValue
    private RepayLoanActivity injectRepayLoanActivity(RepayLoanActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      SelfBindingActivity_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class WebBankingActivitySubcomponentBuilder
      extends ActivitiesModule_CardWebVerificationActivity.WebBankingActivitySubcomponent.Builder {
    private WebBankingActivity seedInstance;

    @Override
    public ActivitiesModule_CardWebVerificationActivity.WebBankingActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            WebBankingActivity.class.getCanonicalName() + " must be set");
      }
      return new WebBankingActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(WebBankingActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class WebBankingActivitySubcomponentImpl
      implements ActivitiesModule_CardWebVerificationActivity.WebBankingActivitySubcomponent {
    private WebBankingActivitySubcomponentImpl(WebBankingActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(WebBankingActivity arg0) {
      injectWebBankingActivity(arg0);
    }

    @CanIgnoreReturnValue
    private WebBankingActivity injectWebBankingActivity(WebBankingActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class AgreementActivitySubcomponentBuilder
      extends ActivitiesModule_AgreementActivity.AgreementActivitySubcomponent.Builder {
    private AgreementActivity seedInstance;

    @Override
    public ActivitiesModule_AgreementActivity.AgreementActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            AgreementActivity.class.getCanonicalName() + " must be set");
      }
      return new AgreementActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(AgreementActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class AgreementActivitySubcomponentImpl
      implements ActivitiesModule_AgreementActivity.AgreementActivitySubcomponent {
    private AgreementActivitySubcomponentImpl(AgreementActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(AgreementActivity arg0) {
      injectAgreementActivity(arg0);
    }

    @CanIgnoreReturnValue
    private AgreementActivity injectAgreementActivity(AgreementActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class CardsActivitySubcomponentBuilder
      extends ActivitiesModule_CardsActivity.CardsActivitySubcomponent.Builder {
    private CardsActivity seedInstance;

    @Override
    public ActivitiesModule_CardsActivity.CardsActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(CardsActivity.class.getCanonicalName() + " must be set");
      }
      return new CardsActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CardsActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CardsActivitySubcomponentImpl
      implements ActivitiesModule_CardsActivity.CardsActivitySubcomponent {
    private CardsActivitySubcomponentImpl(CardsActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(CardsActivity arg0) {
      injectCardsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private CardsActivity injectCardsActivity(CardsActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class ResetPasswordActivitySubcomponentBuilder
      extends ActivitiesModule_ResetPasswordActivity.ResetPasswordActivitySubcomponent.Builder {
    private ResetPasswordActivity seedInstance;

    @Override
    public ActivitiesModule_ResetPasswordActivity.ResetPasswordActivitySubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            ResetPasswordActivity.class.getCanonicalName() + " must be set");
      }
      return new ResetPasswordActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ResetPasswordActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ResetPasswordActivitySubcomponentImpl
      implements ActivitiesModule_ResetPasswordActivity.ResetPasswordActivitySubcomponent {
    private ResetPasswordActivitySubcomponentImpl(
        ResetPasswordActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(ResetPasswordActivity arg0) {
      injectResetPasswordActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ResetPasswordActivity injectResetPasswordActivity(ResetPasswordActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class ProlongationPreferencesActivitySubcomponentBuilder
      extends ActivitiesModule_ProlongationPreferencesDialogActivity
          .ProlongationPreferencesActivitySubcomponent.Builder {
    private ProlongationPreferencesActivity seedInstance;

    @Override
    public ActivitiesModule_ProlongationPreferencesDialogActivity
            .ProlongationPreferencesActivitySubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            ProlongationPreferencesActivity.class.getCanonicalName() + " must be set");
      }
      return new ProlongationPreferencesActivitySubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ProlongationPreferencesActivity arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ProlongationPreferencesActivitySubcomponentImpl
      implements ActivitiesModule_ProlongationPreferencesDialogActivity
          .ProlongationPreferencesActivitySubcomponent {
    private ProlongationPreferencesActivitySubcomponentImpl(
        ProlongationPreferencesActivitySubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    private DispatchingAndroidInjector<android.app.Fragment>
        getDispatchingAndroidInjectorOfFragment2() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          ImmutableMap
              .<Class<? extends android.app.Fragment>,
                  Provider<AndroidInjector.Factory<? extends android.app.Fragment>>>
                  of());
    }

    @Override
    public void inject(ProlongationPreferencesActivity arg0) {
      injectProlongationPreferencesActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ProlongationPreferencesActivity injectProlongationPreferencesActivity(
        ProlongationPreferencesActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectSupportFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      DaggerAppCompatActivity_MembersInjector.injectFrameworkFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment2());
      BaseActivity_MembersInjector.injectNavigatorHolder(
          instance, DaggerAppComponent.this.provideNavigatorHolderProvider.get());
      BaseActivity_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseActivity_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseActivity_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseActivity_MembersInjector.injectLogger(instance, new LoggerImpl());
      return instance;
    }
  }

  private final class CalculatorFragmentSubcomponentBuilder
      extends FragmentsModule_CalculatorFragmentInjector.CalculatorFragmentSubcomponent.Builder {
    private CalculatorFragment seedInstance;

    @Override
    public FragmentsModule_CalculatorFragmentInjector.CalculatorFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            CalculatorFragment.class.getCanonicalName() + " must be set");
      }
      return new CalculatorFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CalculatorFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CalculatorFragmentSubcomponentImpl
      implements FragmentsModule_CalculatorFragmentInjector.CalculatorFragmentSubcomponent {
    private CalculatorFragmentSubcomponentImpl(CalculatorFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(CalculatorFragment arg0) {
      injectCalculatorFragment(arg0);
    }

    @CanIgnoreReturnValue
    private CalculatorFragment injectCalculatorFragment(CalculatorFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class SignUpPhoneFragmentSubcomponentBuilder
      extends FragmentsModule_SignUpPhoneFragmentInjector.SignUpPhoneFragmentSubcomponent.Builder {
    private SignUpPhoneFragment seedInstance;

    @Override
    public FragmentsModule_SignUpPhoneFragmentInjector.SignUpPhoneFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            SignUpPhoneFragment.class.getCanonicalName() + " must be set");
      }
      return new SignUpPhoneFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(SignUpPhoneFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class SignUpPhoneFragmentSubcomponentImpl
      implements FragmentsModule_SignUpPhoneFragmentInjector.SignUpPhoneFragmentSubcomponent {
    private SignUpPhoneFragmentSubcomponentImpl(SignUpPhoneFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(SignUpPhoneFragment arg0) {
      injectSignUpPhoneFragment(arg0);
    }

    @CanIgnoreReturnValue
    private SignUpPhoneFragment injectSignUpPhoneFragment(SignUpPhoneFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class SignUpSMSFragmentSubcomponentBuilder
      extends FragmentsModule_SignUpSMSFragmentInjector.SignUpSMSFragmentSubcomponent.Builder {
    private SignUpSMSFragment seedInstance;

    @Override
    public FragmentsModule_SignUpSMSFragmentInjector.SignUpSMSFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            SignUpSMSFragment.class.getCanonicalName() + " must be set");
      }
      return new SignUpSMSFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(SignUpSMSFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class SignUpSMSFragmentSubcomponentImpl
      implements FragmentsModule_SignUpSMSFragmentInjector.SignUpSMSFragmentSubcomponent {
    private SignUpSMSFragmentSubcomponentImpl(SignUpSMSFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(SignUpSMSFragment arg0) {
      injectSignUpSMSFragment(arg0);
    }

    @CanIgnoreReturnValue
    private SignUpSMSFragment injectSignUpSMSFragment(SignUpSMSFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class PasswordFragmentSubcomponentBuilder
      extends FragmentsModule_PasswordFragment.PasswordFragmentSubcomponent.Builder {
    private PasswordFragment seedInstance;

    @Override
    public FragmentsModule_PasswordFragment.PasswordFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(PasswordFragment.class.getCanonicalName() + " must be set");
      }
      return new PasswordFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(PasswordFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class PasswordFragmentSubcomponentImpl
      implements FragmentsModule_PasswordFragment.PasswordFragmentSubcomponent {
    private PasswordFragmentSubcomponentImpl(PasswordFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(PasswordFragment arg0) {
      injectPasswordFragment(arg0);
    }

    @CanIgnoreReturnValue
    private PasswordFragment injectPasswordFragment(PasswordFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class PersonalInfoFragmentSubcomponentBuilder
      extends FragmentsModule_PersonalInformationFragmentInjector.PersonalInfoFragmentSubcomponent
          .Builder {
    private PersonalInfoFragment seedInstance;

    @Override
    public FragmentsModule_PersonalInformationFragmentInjector.PersonalInfoFragmentSubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            PersonalInfoFragment.class.getCanonicalName() + " must be set");
      }
      return new PersonalInfoFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(PersonalInfoFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class PersonalInfoFragmentSubcomponentImpl
      implements FragmentsModule_PersonalInformationFragmentInjector
          .PersonalInfoFragmentSubcomponent {
    private PersonalInfoFragmentSubcomponentImpl(PersonalInfoFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(PersonalInfoFragment arg0) {
      injectPersonalInfoFragment(arg0);
    }

    @CanIgnoreReturnValue
    private PersonalInfoFragment injectPersonalInfoFragment(PersonalInfoFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class ExtraPersonalInfoFragmentSubcomponentBuilder
      extends FragmentsModule_ExtraPersonalInfoFragmentInjector
          .ExtraPersonalInfoFragmentSubcomponent.Builder {
    private ExtraPersonalInfoFragment seedInstance;

    @Override
    public FragmentsModule_ExtraPersonalInfoFragmentInjector.ExtraPersonalInfoFragmentSubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            ExtraPersonalInfoFragment.class.getCanonicalName() + " must be set");
      }
      return new ExtraPersonalInfoFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ExtraPersonalInfoFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ExtraPersonalInfoFragmentSubcomponentImpl
      implements FragmentsModule_ExtraPersonalInfoFragmentInjector
          .ExtraPersonalInfoFragmentSubcomponent {
    private ExtraPersonalInfoFragmentSubcomponentImpl(
        ExtraPersonalInfoFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(ExtraPersonalInfoFragment arg0) {
      injectExtraPersonalInfoFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ExtraPersonalInfoFragment injectExtraPersonalInfoFragment(
        ExtraPersonalInfoFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class PersonalDataFragmentSubcomponentBuilder
      extends FragmentsModule_PersonalDataFragmentInjector.PersonalDataFragmentSubcomponent
          .Builder {
    private PersonalDataFragment seedInstance;

    @Override
    public FragmentsModule_PersonalDataFragmentInjector.PersonalDataFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            PersonalDataFragment.class.getCanonicalName() + " must be set");
      }
      return new PersonalDataFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(PersonalDataFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class PersonalDataFragmentSubcomponentImpl
      implements FragmentsModule_PersonalDataFragmentInjector.PersonalDataFragmentSubcomponent {
    private PersonalDataFragmentSubcomponentImpl(PersonalDataFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(PersonalDataFragment arg0) {
      injectPersonalDataFragment(arg0);
    }

    @CanIgnoreReturnValue
    private PersonalDataFragment injectPersonalDataFragment(PersonalDataFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class CalculatorDialogFragmentSubcomponentBuilder
      extends FragmentsModule_CalculatorDialogFragmentInjector.CalculatorDialogFragmentSubcomponent
          .Builder {
    private CalculatorDialogFragment seedInstance;

    @Override
    public FragmentsModule_CalculatorDialogFragmentInjector.CalculatorDialogFragmentSubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            CalculatorDialogFragment.class.getCanonicalName() + " must be set");
      }
      return new CalculatorDialogFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CalculatorDialogFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CalculatorDialogFragmentSubcomponentImpl
      implements FragmentsModule_CalculatorDialogFragmentInjector
          .CalculatorDialogFragmentSubcomponent {
    private CalculatorDialogFragmentSubcomponentImpl(
        CalculatorDialogFragmentSubcomponentBuilder builder) {}

    @Override
    public void inject(CalculatorDialogFragment arg0) {
      injectCalculatorDialogFragment(arg0);
    }

    @CanIgnoreReturnValue
    private CalculatorDialogFragment injectCalculatorDialogFragment(
        CalculatorDialogFragment instance) {
      CalculatorDialogFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class SignUpAddressFragmentSubcomponentBuilder
      extends FragmentsModule_SignUpAddressFragmentInjector.SignUpAddressFragmentSubcomponent
          .Builder {
    private SignUpAddressFragment seedInstance;

    @Override
    public FragmentsModule_SignUpAddressFragmentInjector.SignUpAddressFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            SignUpAddressFragment.class.getCanonicalName() + " must be set");
      }
      return new SignUpAddressFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(SignUpAddressFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class SignUpAddressFragmentSubcomponentImpl
      implements FragmentsModule_SignUpAddressFragmentInjector.SignUpAddressFragmentSubcomponent {
    private SignUpAddressFragmentSubcomponentImpl(
        SignUpAddressFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(SignUpAddressFragment arg0) {
      injectSignUpAddressFragment(arg0);
    }

    @CanIgnoreReturnValue
    private SignUpAddressFragment injectSignUpAddressFragment(SignUpAddressFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class PassportFragmentSubcomponentBuilder
      extends FragmentsModule_PassportFragment.PassportFragmentSubcomponent.Builder {
    private PassportFragment seedInstance;

    @Override
    public FragmentsModule_PassportFragment.PassportFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(PassportFragment.class.getCanonicalName() + " must be set");
      }
      return new PassportFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(PassportFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class PassportFragmentSubcomponentImpl
      implements FragmentsModule_PassportFragment.PassportFragmentSubcomponent {
    private PassportFragmentSubcomponentImpl(PassportFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(PassportFragment arg0) {
      injectPassportFragment(arg0);
    }

    @CanIgnoreReturnValue
    private PassportFragment injectPassportFragment(PassportFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class EmployedFragmentSubcomponentBuilder
      extends FragmentsModule_WorkFragmentInjector.EmployedFragmentSubcomponent.Builder {
    private EmployedFragment seedInstance;

    @Override
    public FragmentsModule_WorkFragmentInjector.EmployedFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(EmployedFragment.class.getCanonicalName() + " must be set");
      }
      return new EmployedFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(EmployedFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class EmployedFragmentSubcomponentImpl
      implements FragmentsModule_WorkFragmentInjector.EmployedFragmentSubcomponent {
    private EmployedFragmentSubcomponentImpl(EmployedFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(EmployedFragment arg0) {
      injectEmployedFragment(arg0);
    }

    @CanIgnoreReturnValue
    private EmployedFragment injectEmployedFragment(EmployedFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class UnemployedFragmentSubcomponentBuilder
      extends FragmentsModule_UnemployedFragment.UnemployedFragmentSubcomponent.Builder {
    private UnemployedFragment seedInstance;

    @Override
    public FragmentsModule_UnemployedFragment.UnemployedFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            UnemployedFragment.class.getCanonicalName() + " must be set");
      }
      return new UnemployedFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(UnemployedFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class UnemployedFragmentSubcomponentImpl
      implements FragmentsModule_UnemployedFragment.UnemployedFragmentSubcomponent {
    private UnemployedFragmentSubcomponentImpl(UnemployedFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(UnemployedFragment arg0) {
      injectUnemployedFragment(arg0);
    }

    @CanIgnoreReturnValue
    private UnemployedFragment injectUnemployedFragment(UnemployedFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class BusinessmanFragmentSubcomponentBuilder
      extends FragmentsModule_BusinessmanFragment.BusinessmanFragmentSubcomponent.Builder {
    private BusinessmanFragment seedInstance;

    @Override
    public FragmentsModule_BusinessmanFragment.BusinessmanFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            BusinessmanFragment.class.getCanonicalName() + " must be set");
      }
      return new BusinessmanFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(BusinessmanFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class BusinessmanFragmentSubcomponentImpl
      implements FragmentsModule_BusinessmanFragment.BusinessmanFragmentSubcomponent {
    private BusinessmanFragmentSubcomponentImpl(BusinessmanFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(BusinessmanFragment arg0) {
      injectBusinessmanFragment(arg0);
    }

    @CanIgnoreReturnValue
    private BusinessmanFragment injectBusinessmanFragment(BusinessmanFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class PensionerFragmentSubcomponentBuilder
      extends FragmentsModule_PensionerFragment.PensionerFragmentSubcomponent.Builder {
    private PensionerFragment seedInstance;

    @Override
    public FragmentsModule_PensionerFragment.PensionerFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            PensionerFragment.class.getCanonicalName() + " must be set");
      }
      return new PensionerFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(PensionerFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class PensionerFragmentSubcomponentImpl
      implements FragmentsModule_PensionerFragment.PensionerFragmentSubcomponent {
    private PensionerFragmentSubcomponentImpl(PensionerFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(PensionerFragment arg0) {
      injectPensionerFragment(arg0);
    }

    @CanIgnoreReturnValue
    private PensionerFragment injectPensionerFragment(PensionerFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class StudentFragmentSubcomponentBuilder
      extends FragmentsModule_StudentFragment.StudentFragmentSubcomponent.Builder {
    private StudentFragment seedInstance;

    @Override
    public FragmentsModule_StudentFragment.StudentFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(StudentFragment.class.getCanonicalName() + " must be set");
      }
      return new StudentFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(StudentFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class StudentFragmentSubcomponentImpl
      implements FragmentsModule_StudentFragment.StudentFragmentSubcomponent {
    private StudentFragmentSubcomponentImpl(StudentFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(StudentFragment arg0) {
      injectStudentFragment(arg0);
    }

    @CanIgnoreReturnValue
    private StudentFragment injectStudentFragment(StudentFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class FinanceFragmentSubcomponentBuilder
      extends FragmentsModule_FinanceFragment.FinanceFragmentSubcomponent.Builder {
    private FinanceFragment seedInstance;

    @Override
    public FragmentsModule_FinanceFragment.FinanceFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(FinanceFragment.class.getCanonicalName() + " must be set");
      }
      return new FinanceFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(FinanceFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class FinanceFragmentSubcomponentImpl
      implements FragmentsModule_FinanceFragment.FinanceFragmentSubcomponent {
    private FinanceFragmentSubcomponentImpl(FinanceFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(FinanceFragment arg0) {
      injectFinanceFragment(arg0);
    }

    @CanIgnoreReturnValue
    private FinanceFragment injectFinanceFragment(FinanceFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class InvalidFragmentSubcomponentBuilder
      extends FragmentsModule_InvalidFragment.InvalidFragmentSubcomponent.Builder {
    private InvalidFragment seedInstance;

    @Override
    public FragmentsModule_InvalidFragment.InvalidFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(InvalidFragment.class.getCanonicalName() + " must be set");
      }
      return new InvalidFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(InvalidFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class InvalidFragmentSubcomponentImpl
      implements FragmentsModule_InvalidFragment.InvalidFragmentSubcomponent {
    private InvalidFragmentSubcomponentImpl(InvalidFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(InvalidFragment arg0) {
      injectInvalidFragment(arg0);
    }

    @CanIgnoreReturnValue
    private InvalidFragment injectInvalidFragment(InvalidFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class DecreeFragmentSubcomponentBuilder
      extends FragmentsModule_DecreeFragment.DecreeFragmentSubcomponent.Builder {
    private DecreeFragment seedInstance;

    @Override
    public FragmentsModule_DecreeFragment.DecreeFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(DecreeFragment.class.getCanonicalName() + " must be set");
      }
      return new DecreeFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(DecreeFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class DecreeFragmentSubcomponentImpl
      implements FragmentsModule_DecreeFragment.DecreeFragmentSubcomponent {
    private DecreeFragmentSubcomponentImpl(DecreeFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(DecreeFragment arg0) {
      injectDecreeFragment(arg0);
    }

    @CanIgnoreReturnValue
    private DecreeFragment injectDecreeFragment(DecreeFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class HousewifeFragmentSubcomponentBuilder
      extends FragmentsModule_HousewifeFragment.HousewifeFragmentSubcomponent.Builder {
    private HousewifeFragment seedInstance;

    @Override
    public FragmentsModule_HousewifeFragment.HousewifeFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            HousewifeFragment.class.getCanonicalName() + " must be set");
      }
      return new HousewifeFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(HousewifeFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class HousewifeFragmentSubcomponentImpl
      implements FragmentsModule_HousewifeFragment.HousewifeFragmentSubcomponent {
    private HousewifeFragmentSubcomponentImpl(HousewifeFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(HousewifeFragment arg0) {
      injectHousewifeFragment(arg0);
    }

    @CanIgnoreReturnValue
    private HousewifeFragment injectHousewifeFragment(HousewifeFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class TemporarilyUnemployedFragmentSubcomponentBuilder
      extends FragmentsModule_TemporarilyUnemployedFragment
          .TemporarilyUnemployedFragmentSubcomponent.Builder {
    private TemporarilyUnemployedFragment seedInstance;

    @Override
    public FragmentsModule_TemporarilyUnemployedFragment.TemporarilyUnemployedFragmentSubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            TemporarilyUnemployedFragment.class.getCanonicalName() + " must be set");
      }
      return new TemporarilyUnemployedFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(TemporarilyUnemployedFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class TemporarilyUnemployedFragmentSubcomponentImpl
      implements FragmentsModule_TemporarilyUnemployedFragment
          .TemporarilyUnemployedFragmentSubcomponent {
    private TemporarilyUnemployedFragmentSubcomponentImpl(
        TemporarilyUnemployedFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(TemporarilyUnemployedFragment arg0) {
      injectTemporarilyUnemployedFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TemporarilyUnemployedFragment injectTemporarilyUnemployedFragment(
        TemporarilyUnemployedFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class CardFrontFragmentSubcomponentBuilder
      extends FragmentsModule_CardFrontFragment.CardFrontFragmentSubcomponent.Builder {
    private CardFrontFragment seedInstance;

    @Override
    public FragmentsModule_CardFrontFragment.CardFrontFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            CardFrontFragment.class.getCanonicalName() + " must be set");
      }
      return new CardFrontFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CardFrontFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CardFrontFragmentSubcomponentImpl
      implements FragmentsModule_CardFrontFragment.CardFrontFragmentSubcomponent {
    private CardFrontFragmentSubcomponentImpl(CardFrontFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(CardFrontFragment arg0) {
      injectCardFrontFragment(arg0);
    }

    @CanIgnoreReturnValue
    private CardFrontFragment injectCardFrontFragment(CardFrontFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class CardBackFragmentSubcomponentBuilder
      extends FragmentsModule_CardBackFragment.CardBackFragmentSubcomponent.Builder {
    private CardBackFragment seedInstance;

    @Override
    public FragmentsModule_CardBackFragment.CardBackFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(CardBackFragment.class.getCanonicalName() + " must be set");
      }
      return new CardBackFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CardBackFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CardBackFragmentSubcomponentImpl
      implements FragmentsModule_CardBackFragment.CardBackFragmentSubcomponent {
    private CardBackFragmentSubcomponentImpl(CardBackFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(CardBackFragment arg0) {
      injectCardBackFragment(arg0);
    }

    @CanIgnoreReturnValue
    private CardBackFragment injectCardBackFragment(CardBackFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class TextInputDialogFragmentSubcomponentBuilder
      extends FragmentsModule_TextInputDialogFragment.TextInputDialogFragmentSubcomponent.Builder {
    private TextInputDialogFragment seedInstance;

    @Override
    public FragmentsModule_TextInputDialogFragment.TextInputDialogFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            TextInputDialogFragment.class.getCanonicalName() + " must be set");
      }
      return new TextInputDialogFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(TextInputDialogFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class TextInputDialogFragmentSubcomponentImpl
      implements FragmentsModule_TextInputDialogFragment.TextInputDialogFragmentSubcomponent {
    private TextInputDialogFragmentSubcomponentImpl(
        TextInputDialogFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(TextInputDialogFragment arg0) {
      injectTextInputDialogFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TextInputDialogFragment injectTextInputDialogFragment(
        TextInputDialogFragment instance) {
      DaggerAppCompatDialogFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseInputDialogFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class PhoneInputDialogFragmentSubcomponentBuilder
      extends FragmentsModule_HoneInputDialogFragment.PhoneInputDialogFragmentSubcomponent.Builder {
    private PhoneInputDialogFragment seedInstance;

    @Override
    public FragmentsModule_HoneInputDialogFragment.PhoneInputDialogFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            PhoneInputDialogFragment.class.getCanonicalName() + " must be set");
      }
      return new PhoneInputDialogFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(PhoneInputDialogFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class PhoneInputDialogFragmentSubcomponentImpl
      implements FragmentsModule_HoneInputDialogFragment.PhoneInputDialogFragmentSubcomponent {
    private PhoneInputDialogFragmentSubcomponentImpl(
        PhoneInputDialogFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(PhoneInputDialogFragment arg0) {
      injectPhoneInputDialogFragment(arg0);
    }

    @CanIgnoreReturnValue
    private PhoneInputDialogFragment injectPhoneInputDialogFragment(
        PhoneInputDialogFragment instance) {
      DaggerAppCompatDialogFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseInputDialogFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class ProgressDialogFragmentSubcomponentBuilder
      extends FragmentsModule_ProgressDialogFragment.ProgressDialogFragmentSubcomponent.Builder {
    private ProgressDialogFragment seedInstance;

    @Override
    public FragmentsModule_ProgressDialogFragment.ProgressDialogFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            ProgressDialogFragment.class.getCanonicalName() + " must be set");
      }
      return new ProgressDialogFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ProgressDialogFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ProgressDialogFragmentSubcomponentImpl
      implements FragmentsModule_ProgressDialogFragment.ProgressDialogFragmentSubcomponent {
    private ProgressDialogFragmentSubcomponentImpl(
        ProgressDialogFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(ProgressDialogFragment arg0) {
      injectProgressDialogFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ProgressDialogFragment injectProgressDialogFragment(ProgressDialogFragment instance) {
      DaggerAppCompatDialogFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      return instance;
    }
  }

  private final class SignInFragmentSubcomponentBuilder
      extends FragmentsModule_SignInFragment.SignInFragmentSubcomponent.Builder {
    private SignInFragment seedInstance;

    @Override
    public FragmentsModule_SignInFragment.SignInFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(SignInFragment.class.getCanonicalName() + " must be set");
      }
      return new SignInFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(SignInFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class SignInFragmentSubcomponentImpl
      implements FragmentsModule_SignInFragment.SignInFragmentSubcomponent {
    private SignInFragmentSubcomponentImpl(SignInFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(SignInFragment arg0) {
      injectSignInFragment(arg0);
    }

    @CanIgnoreReturnValue
    private SignInFragment injectSignInFragment(SignInFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class HistoryFragmentSubcomponentBuilder
      extends FragmentsModule_HistoryFragment.HistoryFragmentSubcomponent.Builder {
    private HistoryFragment seedInstance;

    @Override
    public FragmentsModule_HistoryFragment.HistoryFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(HistoryFragment.class.getCanonicalName() + " must be set");
      }
      return new HistoryFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(HistoryFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class HistoryFragmentSubcomponentImpl
      implements FragmentsModule_HistoryFragment.HistoryFragmentSubcomponent {
    private HistoryFragmentSubcomponentImpl(HistoryFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(HistoryFragment arg0) {
      injectHistoryFragment(arg0);
    }

    @CanIgnoreReturnValue
    private HistoryFragment injectHistoryFragment(HistoryFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class ProfileFragmentSubcomponentBuilder
      extends FragmentsModule_QuestionsFragment.ProfileFragmentSubcomponent.Builder {
    private ProfileFragment seedInstance;

    @Override
    public FragmentsModule_QuestionsFragment.ProfileFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(ProfileFragment.class.getCanonicalName() + " must be set");
      }
      return new ProfileFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ProfileFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ProfileFragmentSubcomponentImpl
      implements FragmentsModule_QuestionsFragment.ProfileFragmentSubcomponent {
    private ProfileFragmentSubcomponentImpl(ProfileFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(ProfileFragment arg0) {
      injectProfileFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ProfileFragment injectProfileFragment(ProfileFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class EditPasswordFragmentSubcomponentBuilder
      extends FragmentsModule_EditPasswordFragment.EditPasswordFragmentSubcomponent.Builder {
    private EditPasswordFragment seedInstance;

    @Override
    public FragmentsModule_EditPasswordFragment.EditPasswordFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            EditPasswordFragment.class.getCanonicalName() + " must be set");
      }
      return new EditPasswordFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(EditPasswordFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class EditPasswordFragmentSubcomponentImpl
      implements FragmentsModule_EditPasswordFragment.EditPasswordFragmentSubcomponent {
    private EditPasswordFragmentSubcomponentImpl(EditPasswordFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(EditPasswordFragment arg0) {
      injectEditPasswordFragment(arg0);
    }

    @CanIgnoreReturnValue
    private EditPasswordFragment injectEditPasswordFragment(EditPasswordFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class ContactsFragmentSubcomponentBuilder
      extends FragmentsModule_ContactsFragment.ContactsFragmentSubcomponent.Builder {
    private ContactsFragment seedInstance;

    @Override
    public FragmentsModule_ContactsFragment.ContactsFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(ContactsFragment.class.getCanonicalName() + " must be set");
      }
      return new ContactsFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ContactsFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ContactsFragmentSubcomponentImpl
      implements FragmentsModule_ContactsFragment.ContactsFragmentSubcomponent {
    private ContactsFragmentSubcomponentImpl(ContactsFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(ContactsFragment arg0) {
      injectContactsFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ContactsFragment injectContactsFragment(ContactsFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      ContactsFragment_MembersInjector.injectReset(instance);
      return instance;
    }
  }

  private final class CardsFragmentSubcomponentBuilder
      extends FragmentsModule_CardsFragment.CardsFragmentSubcomponent.Builder {
    private CardsFragment seedInstance;

    @Override
    public FragmentsModule_CardsFragment.CardsFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(CardsFragment.class.getCanonicalName() + " must be set");
      }
      return new CardsFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CardsFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CardsFragmentSubcomponentImpl
      implements FragmentsModule_CardsFragment.CardsFragmentSubcomponent {
    private CardsFragmentSubcomponentImpl(CardsFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(CardsFragment arg0) {
      injectCardsFragment(arg0);
    }

    @CanIgnoreReturnValue
    private CardsFragment injectCardsFragment(CardsFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class NewCardFrontFragmentSubcomponentBuilder
      extends FragmentsModule_NewCardFrontFragment.NewCardFrontFragmentSubcomponent.Builder {
    private NewCardFrontFragment seedInstance;

    @Override
    public FragmentsModule_NewCardFrontFragment.NewCardFrontFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            NewCardFrontFragment.class.getCanonicalName() + " must be set");
      }
      return new NewCardFrontFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(NewCardFrontFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class NewCardFrontFragmentSubcomponentImpl
      implements FragmentsModule_NewCardFrontFragment.NewCardFrontFragmentSubcomponent {
    private NewCardFrontFragmentSubcomponentImpl(NewCardFrontFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(NewCardFrontFragment arg0) {
      injectNewCardFrontFragment(arg0);
    }

    @CanIgnoreReturnValue
    private NewCardFrontFragment injectNewCardFrontFragment(NewCardFrontFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class NewCardBackFragmentSubcomponentBuilder
      extends FragmentsModule_NewCardBackFragment.NewCardBackFragmentSubcomponent.Builder {
    private NewCardBackFragment seedInstance;

    @Override
    public FragmentsModule_NewCardBackFragment.NewCardBackFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            NewCardBackFragment.class.getCanonicalName() + " must be set");
      }
      return new NewCardBackFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(NewCardBackFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class NewCardBackFragmentSubcomponentImpl
      implements FragmentsModule_NewCardBackFragment.NewCardBackFragmentSubcomponent {
    private NewCardBackFragmentSubcomponentImpl(NewCardBackFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(NewCardBackFragment arg0) {
      injectNewCardBackFragment(arg0);
    }

    @CanIgnoreReturnValue
    private NewCardBackFragment injectNewCardBackFragment(NewCardBackFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class CardSmsConfirmationFragmentSubcomponentBuilder
      extends FragmentsModule_CardSmsFragment.CardSmsConfirmationFragmentSubcomponent.Builder {
    private CardSmsConfirmationFragment seedInstance;

    @Override
    public FragmentsModule_CardSmsFragment.CardSmsConfirmationFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            CardSmsConfirmationFragment.class.getCanonicalName() + " must be set");
      }
      return new CardSmsConfirmationFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CardSmsConfirmationFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CardSmsConfirmationFragmentSubcomponentImpl
      implements FragmentsModule_CardSmsFragment.CardSmsConfirmationFragmentSubcomponent {
    private CardSmsConfirmationFragmentSubcomponentImpl(
        CardSmsConfirmationFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(CardSmsConfirmationFragment arg0) {
      injectCardSmsConfirmationFragment(arg0);
    }

    @CanIgnoreReturnValue
    private CardSmsConfirmationFragment injectCardSmsConfirmationFragment(
        CardSmsConfirmationFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class StatusFragmentSubcomponentBuilder
      extends FragmentsModule_CreditFragment.StatusFragmentSubcomponent.Builder {
    private StatusFragment seedInstance;

    @Override
    public FragmentsModule_CreditFragment.StatusFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(StatusFragment.class.getCanonicalName() + " must be set");
      }
      return new StatusFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(StatusFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class StatusFragmentSubcomponentImpl
      implements FragmentsModule_CreditFragment.StatusFragmentSubcomponent {
    private StatusFragmentSubcomponentImpl(StatusFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(StatusFragment arg0) {
      injectStatusFragment(arg0);
    }

    @CanIgnoreReturnValue
    private StatusFragment injectStatusFragment(StatusFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class InputPromoCodeDialogFragmentSubcomponentBuilder
      extends FragmentsModule_InputPromoCodeDialogFragment.InputPromoCodeDialogFragmentSubcomponent
          .Builder {
    private InputPromoCodeDialogFragment seedInstance;

    @Override
    public FragmentsModule_InputPromoCodeDialogFragment.InputPromoCodeDialogFragmentSubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            InputPromoCodeDialogFragment.class.getCanonicalName() + " must be set");
      }
      return new InputPromoCodeDialogFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(InputPromoCodeDialogFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class InputPromoCodeDialogFragmentSubcomponentImpl
      implements FragmentsModule_InputPromoCodeDialogFragment
          .InputPromoCodeDialogFragmentSubcomponent {
    private InputPromoCodeDialogFragmentSubcomponentImpl(
        InputPromoCodeDialogFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(InputPromoCodeDialogFragment arg0) {
      injectInputPromoCodeDialogFragment(arg0);
    }

    @CanIgnoreReturnValue
    private InputPromoCodeDialogFragment injectInputPromoCodeDialogFragment(
        InputPromoCodeDialogFragment instance) {
      DaggerAppCompatDialogFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseDialogFragment2_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseDialogFragment2_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseDialogFragment2_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      return instance;
    }
  }

  private final class TerminalsFragmentSubcomponentBuilder
      extends FragmentsModule_TerminalsFragment.TerminalsFragmentSubcomponent.Builder {
    private TerminalsFragment seedInstance;

    @Override
    public FragmentsModule_TerminalsFragment.TerminalsFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            TerminalsFragment.class.getCanonicalName() + " must be set");
      }
      return new TerminalsFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(TerminalsFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class TerminalsFragmentSubcomponentImpl
      implements FragmentsModule_TerminalsFragment.TerminalsFragmentSubcomponent {
    private TerminalsFragmentSubcomponentImpl(TerminalsFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(TerminalsFragment arg0) {
      injectTerminalsFragment(arg0);
    }

    @CanIgnoreReturnValue
    private TerminalsFragment injectTerminalsFragment(TerminalsFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class RepayByCardFragmentSubcomponentBuilder
      extends FragmentsModule_CardFragment.RepayByCardFragmentSubcomponent.Builder {
    private RepayByCardFragment seedInstance;

    @Override
    public FragmentsModule_CardFragment.RepayByCardFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            RepayByCardFragment.class.getCanonicalName() + " must be set");
      }
      return new RepayByCardFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(RepayByCardFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class RepayByCardFragmentSubcomponentImpl
      implements FragmentsModule_CardFragment.RepayByCardFragmentSubcomponent {
    private RepayByCardFragmentSubcomponentImpl(RepayByCardFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(RepayByCardFragment arg0) {
      injectRepayByCardFragment(arg0);
    }

    @CanIgnoreReturnValue
    private RepayByCardFragment injectRepayByCardFragment(RepayByCardFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class BankFragmentSubcomponentBuilder
      extends FragmentsModule_BankFragment.BankFragmentSubcomponent.Builder {
    private BankFragment seedInstance;

    @Override
    public FragmentsModule_BankFragment.BankFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(BankFragment.class.getCanonicalName() + " must be set");
      }
      return new BankFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(BankFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class BankFragmentSubcomponentImpl
      implements FragmentsModule_BankFragment.BankFragmentSubcomponent {
    private BankFragmentSubcomponentImpl(BankFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(BankFragment arg0) {
      injectBankFragment(arg0);
    }

    @CanIgnoreReturnValue
    private BankFragment injectBankFragment(BankFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class MyCreditWebViewFragmentSubcomponentBuilder
      extends FragmentsModule_CardWebVerificationFragment.MyCreditWebViewFragmentSubcomponent
          .Builder {
    private MyCreditWebViewFragment seedInstance;

    @Override
    public FragmentsModule_CardWebVerificationFragment.MyCreditWebViewFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            MyCreditWebViewFragment.class.getCanonicalName() + " must be set");
      }
      return new MyCreditWebViewFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(MyCreditWebViewFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class MyCreditWebViewFragmentSubcomponentImpl
      implements FragmentsModule_CardWebVerificationFragment.MyCreditWebViewFragmentSubcomponent {
    private MyCreditWebViewFragmentSubcomponentImpl(
        MyCreditWebViewFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(MyCreditWebViewFragment arg0) {
      injectMyCreditWebViewFragment(arg0);
    }

    @CanIgnoreReturnValue
    private MyCreditWebViewFragment injectMyCreditWebViewFragment(
        MyCreditWebViewFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class AgreementFragmentSubcomponentBuilder
      extends FragmentsModule_AgreementFragment.AgreementFragmentSubcomponent.Builder {
    private AgreementFragment seedInstance;

    @Override
    public FragmentsModule_AgreementFragment.AgreementFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            AgreementFragment.class.getCanonicalName() + " must be set");
      }
      return new AgreementFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(AgreementFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class AgreementFragmentSubcomponentImpl
      implements FragmentsModule_AgreementFragment.AgreementFragmentSubcomponent {
    private AgreementFragmentSubcomponentImpl(AgreementFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(AgreementFragment arg0) {
      injectAgreementFragment(arg0);
    }

    @CanIgnoreReturnValue
    private AgreementFragment injectAgreementFragment(AgreementFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class CardsPickerFragmentSubcomponentBuilder
      extends FragmentsModule_CardsPickerFragment.CardsPickerFragmentSubcomponent.Builder {
    private CardsPickerFragment seedInstance;

    @Override
    public FragmentsModule_CardsPickerFragment.CardsPickerFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            CardsPickerFragment.class.getCanonicalName() + " must be set");
      }
      return new CardsPickerFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(CardsPickerFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class CardsPickerFragmentSubcomponentImpl
      implements FragmentsModule_CardsPickerFragment.CardsPickerFragmentSubcomponent {
    private CardsPickerFragmentSubcomponentImpl(CardsPickerFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(CardsPickerFragment arg0) {
      injectCardsPickerFragment(arg0);
    }

    @CanIgnoreReturnValue
    private CardsPickerFragment injectCardsPickerFragment(CardsPickerFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class ResetPasswordByPhoneFragmentSubcomponentBuilder
      extends FragmentsModule_ResetPasswordFragment.ResetPasswordByPhoneFragmentSubcomponent
          .Builder {
    private ResetPasswordByPhoneFragment seedInstance;

    @Override
    public FragmentsModule_ResetPasswordFragment.ResetPasswordByPhoneFragmentSubcomponent build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            ResetPasswordByPhoneFragment.class.getCanonicalName() + " must be set");
      }
      return new ResetPasswordByPhoneFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ResetPasswordByPhoneFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ResetPasswordByPhoneFragmentSubcomponentImpl
      implements FragmentsModule_ResetPasswordFragment.ResetPasswordByPhoneFragmentSubcomponent {
    private ResetPasswordByPhoneFragmentSubcomponentImpl(
        ResetPasswordByPhoneFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(ResetPasswordByPhoneFragment arg0) {
      injectResetPasswordByPhoneFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ResetPasswordByPhoneFragment injectResetPasswordByPhoneFragment(
        ResetPasswordByPhoneFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class ProlongationPreferencesFragmentSubcomponentBuilder
      extends FragmentsModule_ProlongationPreferencesFragment
          .ProlongationPreferencesFragmentSubcomponent.Builder {
    private ProlongationPreferencesFragment seedInstance;

    @Override
    public FragmentsModule_ProlongationPreferencesFragment
            .ProlongationPreferencesFragmentSubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            ProlongationPreferencesFragment.class.getCanonicalName() + " must be set");
      }
      return new ProlongationPreferencesFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(ProlongationPreferencesFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class ProlongationPreferencesFragmentSubcomponentImpl
      implements FragmentsModule_ProlongationPreferencesFragment
          .ProlongationPreferencesFragmentSubcomponent {
    private ProlongationPreferencesFragmentSubcomponentImpl(
        ProlongationPreferencesFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(ProlongationPreferencesFragment arg0) {
      injectProlongationPreferencesFragment(arg0);
    }

    @CanIgnoreReturnValue
    private ProlongationPreferencesFragment injectProlongationPreferencesFragment(
        ProlongationPreferencesFragment instance) {
      DaggerFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseFragment_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseFragment_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      BaseFragment_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseFragment_MembersInjector.injectViewModelFactory(
          instance, DaggerAppComponent.this.viewModelFactoryImplProvider.get());
      return instance;
    }
  }

  private final class UneditablePersonalDataDialogSubcomponentBuilder
      extends FragmentsModule_UneditablePersonalDataDialog.UneditablePersonalDataDialogSubcomponent
          .Builder {
    private UneditablePersonalDataDialog seedInstance;

    @Override
    public FragmentsModule_UneditablePersonalDataDialog.UneditablePersonalDataDialogSubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            UneditablePersonalDataDialog.class.getCanonicalName() + " must be set");
      }
      return new UneditablePersonalDataDialogSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(UneditablePersonalDataDialog arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class UneditablePersonalDataDialogSubcomponentImpl
      implements FragmentsModule_UneditablePersonalDataDialog
          .UneditablePersonalDataDialogSubcomponent {
    private UneditablePersonalDataDialogSubcomponentImpl(
        UneditablePersonalDataDialogSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(UneditablePersonalDataDialog arg0) {
      injectUneditablePersonalDataDialog(arg0);
    }

    @CanIgnoreReturnValue
    private UneditablePersonalDataDialog injectUneditablePersonalDataDialog(
        UneditablePersonalDataDialog instance) {
      DaggerAppCompatDialogFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseDialogFragment2_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseDialogFragment2_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseDialogFragment2_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      return instance;
    }
  }

  private final class PreferRepayAmountInputDialogFragmentSubcomponentBuilder
      extends FragmentsModule_PreferRepayAmountInputDialogFragment
          .PreferRepayAmountInputDialogFragmentSubcomponent.Builder {
    private PreferRepayAmountInputDialogFragment seedInstance;

    @Override
    public FragmentsModule_PreferRepayAmountInputDialogFragment
            .PreferRepayAmountInputDialogFragmentSubcomponent
        build() {
      if (seedInstance == null) {
        throw new IllegalStateException(
            PreferRepayAmountInputDialogFragment.class.getCanonicalName() + " must be set");
      }
      return new PreferRepayAmountInputDialogFragmentSubcomponentImpl(this);
    }

    @Override
    public void seedInstance(PreferRepayAmountInputDialogFragment arg0) {
      this.seedInstance = Preconditions.checkNotNull(arg0);
    }
  }

  private final class PreferRepayAmountInputDialogFragmentSubcomponentImpl
      implements FragmentsModule_PreferRepayAmountInputDialogFragment
          .PreferRepayAmountInputDialogFragmentSubcomponent {
    private PreferRepayAmountInputDialogFragmentSubcomponentImpl(
        PreferRepayAmountInputDialogFragmentSubcomponentBuilder builder) {}

    private Map<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
        getMapOfClassOfAndProviderOfFactoryOf() {
      return ImmutableMap
          .<Class<? extends Fragment>, Provider<AndroidInjector.Factory<? extends Fragment>>>
              builder()
          .put(
              CalculatorFragment.class,
              (Provider) DaggerAppComponent.this.calculatorFragmentSubcomponentBuilderProvider)
          .put(
              SignUpPhoneFragment.class,
              (Provider) DaggerAppComponent.this.signUpPhoneFragmentSubcomponentBuilderProvider)
          .put(
              SignUpSMSFragment.class,
              (Provider) DaggerAppComponent.this.signUpSMSFragmentSubcomponentBuilderProvider)
          .put(
              PasswordFragment.class,
              (Provider) DaggerAppComponent.this.passwordFragmentSubcomponentBuilderProvider)
          .put(
              PersonalInfoFragment.class,
              (Provider) DaggerAppComponent.this.personalInfoFragmentSubcomponentBuilderProvider)
          .put(
              ExtraPersonalInfoFragment.class,
              (Provider)
                  DaggerAppComponent.this.extraPersonalInfoFragmentSubcomponentBuilderProvider)
          .put(
              PersonalDataFragment.class,
              (Provider) DaggerAppComponent.this.personalDataFragmentSubcomponentBuilderProvider)
          .put(
              CalculatorDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.calculatorDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignUpAddressFragment.class,
              (Provider) DaggerAppComponent.this.signUpAddressFragmentSubcomponentBuilderProvider)
          .put(
              PassportFragment.class,
              (Provider) DaggerAppComponent.this.passportFragmentSubcomponentBuilderProvider)
          .put(
              EmployedFragment.class,
              (Provider) DaggerAppComponent.this.employedFragmentSubcomponentBuilderProvider)
          .put(
              UnemployedFragment.class,
              (Provider) DaggerAppComponent.this.unemployedFragmentSubcomponentBuilderProvider)
          .put(
              BusinessmanFragment.class,
              (Provider) DaggerAppComponent.this.businessmanFragmentSubcomponentBuilderProvider)
          .put(
              PensionerFragment.class,
              (Provider) DaggerAppComponent.this.pensionerFragmentSubcomponentBuilderProvider)
          .put(
              StudentFragment.class,
              (Provider) DaggerAppComponent.this.studentFragmentSubcomponentBuilderProvider)
          .put(
              FinanceFragment.class,
              (Provider) DaggerAppComponent.this.financeFragmentSubcomponentBuilderProvider)
          .put(
              InvalidFragment.class,
              (Provider) DaggerAppComponent.this.invalidFragmentSubcomponentBuilderProvider)
          .put(
              DecreeFragment.class,
              (Provider) DaggerAppComponent.this.decreeFragmentSubcomponentBuilderProvider)
          .put(
              HousewifeFragment.class,
              (Provider) DaggerAppComponent.this.housewifeFragmentSubcomponentBuilderProvider)
          .put(
              TemporarilyUnemployedFragment.class,
              (Provider)
                  DaggerAppComponent.this.temporarilyUnemployedFragmentSubcomponentBuilderProvider)
          .put(
              CardFrontFragment.class,
              (Provider) DaggerAppComponent.this.cardFrontFragmentSubcomponentBuilderProvider)
          .put(
              CardBackFragment.class,
              (Provider) DaggerAppComponent.this.cardBackFragmentSubcomponentBuilderProvider)
          .put(
              TextInputDialogFragment.class,
              (Provider) DaggerAppComponent.this.textInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              PhoneInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.phoneInputDialogFragmentSubcomponentBuilderProvider)
          .put(
              ProgressDialogFragment.class,
              (Provider) DaggerAppComponent.this.progressDialogFragmentSubcomponentBuilderProvider)
          .put(
              SignInFragment.class,
              (Provider) DaggerAppComponent.this.signInFragmentSubcomponentBuilderProvider)
          .put(
              HistoryFragment.class,
              (Provider) DaggerAppComponent.this.historyFragmentSubcomponentBuilderProvider)
          .put(
              ProfileFragment.class,
              (Provider) DaggerAppComponent.this.profileFragmentSubcomponentBuilderProvider)
          .put(
              EditPasswordFragment.class,
              (Provider) DaggerAppComponent.this.editPasswordFragmentSubcomponentBuilderProvider)
          .put(
              ContactsFragment.class,
              (Provider) DaggerAppComponent.this.contactsFragmentSubcomponentBuilderProvider)
          .put(
              CardsFragment.class,
              (Provider) DaggerAppComponent.this.cardsFragmentSubcomponentBuilderProvider)
          .put(
              NewCardFrontFragment.class,
              (Provider) DaggerAppComponent.this.newCardFrontFragmentSubcomponentBuilderProvider)
          .put(
              NewCardBackFragment.class,
              (Provider) DaggerAppComponent.this.newCardBackFragmentSubcomponentBuilderProvider)
          .put(
              CardSmsConfirmationFragment.class,
              (Provider)
                  DaggerAppComponent.this.cardSmsConfirmationFragmentSubcomponentBuilderProvider)
          .put(
              StatusFragment.class,
              (Provider) DaggerAppComponent.this.statusFragmentSubcomponentBuilderProvider)
          .put(
              InputPromoCodeDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this.inputPromoCodeDialogFragmentSubcomponentBuilderProvider)
          .put(
              TerminalsFragment.class,
              (Provider) DaggerAppComponent.this.terminalsFragmentSubcomponentBuilderProvider)
          .put(
              RepayByCardFragment.class,
              (Provider) DaggerAppComponent.this.repayByCardFragmentSubcomponentBuilderProvider)
          .put(
              BankFragment.class,
              (Provider) DaggerAppComponent.this.bankFragmentSubcomponentBuilderProvider)
          .put(
              MyCreditWebViewFragment.class,
              (Provider) DaggerAppComponent.this.myCreditWebViewFragmentSubcomponentBuilderProvider)
          .put(
              AgreementFragment.class,
              (Provider) DaggerAppComponent.this.agreementFragmentSubcomponentBuilderProvider)
          .put(
              CardsPickerFragment.class,
              (Provider) DaggerAppComponent.this.cardsPickerFragmentSubcomponentBuilderProvider)
          .put(
              ResetPasswordByPhoneFragment.class,
              (Provider)
                  DaggerAppComponent.this.resetPasswordByPhoneFragmentSubcomponentBuilderProvider)
          .put(
              ProlongationPreferencesFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .prolongationPreferencesFragmentSubcomponentBuilderProvider)
          .put(
              UneditablePersonalDataDialog.class,
              (Provider)
                  DaggerAppComponent.this.uneditablePersonalDataDialogSubcomponentBuilderProvider)
          .put(
              PreferRepayAmountInputDialogFragment.class,
              (Provider)
                  DaggerAppComponent.this
                      .preferRepayAmountInputDialogFragmentSubcomponentBuilderProvider)
          .build();
    }

    private DispatchingAndroidInjector<Fragment> getDispatchingAndroidInjectorOfFragment() {
      return DispatchingAndroidInjector_Factory.newDispatchingAndroidInjector(
          getMapOfClassOfAndProviderOfFactoryOf());
    }

    @Override
    public void inject(PreferRepayAmountInputDialogFragment arg0) {
      injectPreferRepayAmountInputDialogFragment(arg0);
    }

    @CanIgnoreReturnValue
    private PreferRepayAmountInputDialogFragment injectPreferRepayAmountInputDialogFragment(
        PreferRepayAmountInputDialogFragment instance) {
      DaggerAppCompatDialogFragment_MembersInjector.injectChildFragmentInjector(
          instance, getDispatchingAndroidInjectorOfFragment());
      BaseDialogFragment2_MembersInjector.injectRouter(
          instance, DaggerAppComponent.this.provideRouterProvider.get());
      BaseDialogFragment2_MembersInjector.injectStorage(
          instance, DaggerAppComponent.this.localStorageImplProvider.get());
      BaseDialogFragment2_MembersInjector.injectEvents(
          instance, DaggerAppComponent.this.appEventsProvider.get());
      return instance;
    }
  }
}
