// Generated by Dagger (https://google.github.io/dagger).
package ua.mycredit.mycredit.ui.bases;

import android.arch.lifecycle.ViewModelProvider;
import android.support.v4.app.Fragment;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import javax.inject.Provider;
import ru.terrakok.cicerone.Router;
import ua.mycredit.core.LocalStorage;
import ua.mycredit.mycredit.AppEvents;

public final class BaseFragment_MembersInjector implements MembersInjector<BaseFragment> {
  private final Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider;

  private final Provider<Router> routerProvider;

  private final Provider<AppEvents> eventsProvider;

  private final Provider<LocalStorage> storageProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public BaseFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<Router> routerProvider,
      Provider<AppEvents> eventsProvider,
      Provider<LocalStorage> storageProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.childFragmentInjectorProvider = childFragmentInjectorProvider;
    this.routerProvider = routerProvider;
    this.eventsProvider = eventsProvider;
    this.storageProvider = storageProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<BaseFragment> create(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<Router> routerProvider,
      Provider<AppEvents> eventsProvider,
      Provider<LocalStorage> storageProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new BaseFragment_MembersInjector(
        childFragmentInjectorProvider,
        routerProvider,
        eventsProvider,
        storageProvider,
        viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(BaseFragment instance) {
    DaggerFragment_MembersInjector.injectChildFragmentInjector(
        instance, childFragmentInjectorProvider.get());
    injectRouter(instance, routerProvider.get());
    injectEvents(instance, eventsProvider.get());
    injectStorage(instance, storageProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  public static void injectRouter(BaseFragment instance, Router router) {
    instance.router = router;
  }

  public static void injectEvents(BaseFragment instance, AppEvents events) {
    instance.events = events;
  }

  public static void injectStorage(BaseFragment instance, LocalStorage storage) {
    instance.storage = storage;
  }

  public static void injectViewModelFactory(
      BaseFragment instance, ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
