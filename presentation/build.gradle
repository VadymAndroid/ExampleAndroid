apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "ua.mycredit.mycredit"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName

        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file("$rootProject.projectDir/debug.keystore")
            keyAlias "alias"
            storePassword "password"
            keyPassword "password"
        }
        production {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.production
        }
    }

    flavorDimensions "dataSource"

    productFlavors {

        mock {
            dimension "dataSource"
        }

        full {
            dimension "dataSource"
        }
    }

    variantFilter { variant ->
        def flavorsNames = variant.flavors*.name

        if (variant.name.endsWith("Release") && flavorsNames.contains("mock")) {
            setIgnore(true)
        }
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental true
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:multidex:1.0.3'

    fullImplementation project(':data')
    mockImplementation project(':data-mock')

    //Support
    implementation "com.android.support:appcompat-v7:$versions.support"
    implementation "com.android.support:cardview-v7:$versions.support"
    implementation "com.android.support:design:$versions.support"
    implementation "com.android.support:customtabs:$versions.support"
    implementation "com.android.support:animated-vector-drawable:$versions.support"
    implementation "com.android.support:support-v4:$versions.support"

    //Anko
    implementation "org.jetbrains.anko:anko-commons:$versions.anko"
    implementation "org.jetbrains.anko:anko-sdk25:$versions.anko"
    implementation "org.jetbrains.anko:anko-appcompat-v7:$versions.anko"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$versions.components"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    kapt "android.arch.lifecycle:compiler:$versions.components"

    //Router
    implementation 'ru.terrakok.cicerone:cicerone:3.0.0'

    // Google Services
    implementation "com.google.android.gms:play-services-places:16.0.0"
    implementation "com.google.android.gms:play-services-auth:16.0.1"

    // Firebase
    implementation "com.google.firebase:firebase-core:$versions.firebase"
    implementation "com.google.firebase:firebase-messaging:17.3.4"
    implementation 'com.google.firebase:firebase-perf:16.2.3'
    implementation 'com.google.firebase:firebase-inappmessaging-display:17.0.4'

    //dagger
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    //Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    implementation "com.github.yongjhih.rx-receiver:rx2-receiver:0.0.1"

    //UI
    implementation 'ru.egslava:MaskedEditText:1.0.5'
    implementation 'com.aurelhubert:ahbottomnavigation:2.1.0'
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'

    //FB
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'

    implementation 'io.card:android-sdk:5.5.0'
    implementation 'com.github.hotchemi:android-rate:1.0.1'
    implementation 'eu.inloop:pageradapter:0.1.0'

    //Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }

    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
}

apply plugin: 'com.google.gms.google-services'
